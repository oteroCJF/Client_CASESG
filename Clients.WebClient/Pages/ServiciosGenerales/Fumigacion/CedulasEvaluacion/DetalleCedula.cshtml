@page "/fumigacion/{moduloId}/{submoduloId}/facturacion/detalle/{inmueble}/{facturacion}/{cedula}"
@model Clients.WebClient.Pages.Fumigacion.CedulasEvaluacion.DetalleModel;
@{
    <div class="titulo-principal">
        <b>@Model.Servicio.Descripcion </b> <i class="fad fa-bug mr-2"></i>
        <a href="/fumigacion/@Model.Modulo.Id/@Model.Submodulo.Id/facturacion/@Model.Repositorio.Anio/@Model.Repositorio.MesId/@Model.Cedula.ContratoId/@Request.QueryString.Value" type='button' class="btn btn-sm btn-warning botonregreso float-right ml-2 btnRegresar col-1" data-toggle="tooltip" title="Regresar a las cédulas" data-placement="top">
            <i class="fal fa-arrow-left"></i>
        </a>

        @if (@Model.Cedula.Estatus.Nombre.Equals("Autorizada") || @Model.Cedula.Estatus.Nombre.Equals("Autorizado CAE") ||
 @Model.Cedula.Estatus.Nombre.Equals("Trámite Rechazado") || @Model.Cedula.Estatus.Nombre.Equals("En Trámite") ||
 @Model.Cedula.Estatus.Nombre.Equals("Trámite de Pago"))
        {
            <a href="#" type='button' class="btn btn-sm btn-danger botonregreso float-right ml-2 solicitudRechazo" data-toggle="tooltip"
               title="Solicitar rechazo de la cédula" data-placement="top">
                <i class="fal fa-times-circle"></i>
            </a>
        }
    </div>

    @*<div class="row col-lg-12">
        <div class="col-lg-12">

            @if (@Model.Cedula.Estatus.Nombre.Equals("Autorizada") || @Model.Cedula.Estatus.Nombre.Equals("Autorizado CAE") ||
      @Model.Cedula.Estatus.Nombre.Equals("Trámite Rechazado") || @Model.Cedula.Estatus.Nombre.Equals("En Trámite") ||
      @Model.Cedula.Estatus.Nombre.Equals("Trámite de Pago"))
            {
                <a href="#" type='button' class="btn btn-sm btn-danger botonregreso float-right ml-2 solicitudRechazo" data-toggle="tooltip"
                   title="Solicitar rechazo de la cédula" data-placement="top">
                    <i class="fal fa-times-circle"></i>
                </a>
            }
        </div>
    </div>*@

    ViewData["Title"] = "Detalle del Inmueble - " + Model.Inmueble.Nombre;
    ViewData["Action"] = "Facturación / Detalle de Facturación";
    var i = 0;
    var ci = 0;
    var cf = 0;
    var ce = 0;
    var lc = 0;
    var sp = 0;
    decimal tdeductivas = Model.Cedula.Penalizacion;
    decimal tpenalizacion = 0;
    var pDeductivas = Model.Cedula.respuestas.Where(r => r.cuestionario.Tipo.Equals("Deductiva")).Select(c => c.cuestionario.Consecutivo);
    var pPenalizacion = Model.Cedula.respuestas.Where(r => r.cuestionario.Tipo.Equals("Penalizacion")).Select(c => c.cuestionario.Consecutivo);
}



<div class="row col-lg-12 mt-3">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-header cabeceraInformacion">
                <i class="fa-sharp fa-light fa-list-check mr-2"></i> Información
            </div>
            <div class="card-body" id="cuerpoInformacion" style="display:none">
                <div class="row col-lg-12">
                    <div class="col-lg-4">
                        <div class="card">
                            <div class="card-header cabeceraInformacionG">
                                <i class="fa-sharp fa-light fa-list-check mr-2"></i> General
                            </div>
                            <div class="card-body" id="cuerpoInformacionG" style="display: none">
                                <div class="row">
                                    <div class="col-lg-12">
                                        <ul class="mb-0 fa-ul">
                                            <li class="small mt-3"><span class="fa-li"><i class="fas fa-lg fa-calendar"></i></span>Evaluación correspondiente al mes de<b>@Model.Cedula.Mes.Nombre</b> del año <b>@Model.Cedula.Anio</b></li>
                                            <li class="small mt-3"><span class="fa-li"><i class="fas fa-lg fa-check"></i></span><b class="mr-1 @Model.Cedula.Estatus.Fondo.Replace("bg","text")">Estatus: @Model.Cedula.Estatus.Nombre</b></li>
                                            <li class="small mt-3"><span class="fa-li"><i class="fas fa-lg fa-dollar-sign"></i></span> <b>Facturación Total: </b>: @String.Format(System.Globalization.CultureInfo.CurrentCulture, "{0:C}", Model.Facturas.Where(f => !f.Tipo.Equals("NC")).Sum(f => f.Total))</li>
                                            <li class="small mt-3"><span class="fa-li"><i class="fad fa-star"></i></span> <b>Calificación: </b> @Model.Cedula.Calificacion</li>
                                            <li class="small mt-3"><span class="fa-li"><i class="fas fa-lg fa-user"></i></span> <b>Elaboró: </b> @Model.Cedula.Usuario.NombreEmp @Model.Cedula.Usuario.PaternoEmp @Model.Cedula.Usuario.MaternoEmp</li>
                                            <li class="small mt-3"><span class="fa-li"><i class="fas fa-lg fa-mailbox"></i></span> <b>Correo: </b> @Model.Cedula.Usuario.Email</li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="card">
                            <div class="card-header cabeceraContrato">
                                <i class="fa-sharp fa-light fa-file-contract mr-2"></i> Contrato
                            </div>
                            <div class="card-body" id="cuerpoContrato" style="display: none">
                                <div class="row">
                                    <div class="col-lg-12">
                                        <ul class="ml-4 mb-0 fa-ul">
                                            <li class="small mt-3"><span class="fa-li"><i class="fas fa-lg fa-info"></i></span> <b># de Contrato: </b> @Model.Repositorio.Contrato.NoContrato</li>
                                            <li class="small mt-3"><span class="fa-li"><i class="fad fa-calendar"></i></span> <b>Vigencia: </b> Del @Model.Repositorio.Contrato.InicioVigencia.ToString("dd/MM/yyyy") al @Model.Repositorio.Contrato.FinVigencia.ToString("dd/MM/yyyy")</li>
                                            <li class="small mt-3"><span class="fa-li"><i class="fas fa-lg fa-building-user"></i></span> <b>Empresa: </b> @Model.Repositorio.Contrato.Empresa <br /></li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="card">
                            <div class="card-header cabeceraInmueble">
                                <i class="fa-sharp fa-light fa-building mr-2"></i> Inmueble
                            </div>
                            <div class="card-body" id="cuerpoInmueble" style="display: none">
                                <div class="row">
                                    <div class="col-lg-12">
                                        <ul class="mb-0 fa-ul">
                                            <li class="small mt-3"><span class="fa-li"><i class="fas fa-lg fa-building"></i></span><b>Número de Cliente:</b> @Model.Inmueble.ClienteEstafeta</li>
                                            <li class="small mt-3"><span class="fa-li"><i class="fas fa-lg fa-building-circle-check"></i></span><b>Inmueble:</b> @Model.Inmueble.Nombre</li>
                                            <li class="small mt-3"><span class="fa-li"><i class="fas fa-lg fa-building-user"></i></span><b>Administración:</b> @Model.Inmueble.Descripcion</li>
                                            <li class="small mt-3"><span class="fa-li"><i class="fas fa-lg fa-address-card"></i></span><b>Dirección:</b> @Model.Inmueble.Direccion</li>
                                            <li class="small mt-3"><span class="fa-li"><i class="fas fa-lg fa-user"></i></span><b>Administrador:</b> @Model.Inmueble.Administrador</li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row col-lg-12 mt-3" id="divFacturacion">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-header cabeceraFacturacion">
                <i class="fa-sharp fa-light fa-money-bill-1-wave mr-2"></i> Facturación
            </div>
            <div class="card-body cuerpoFacturacion" style="display: none">
                <div class="row col-lg-12 mt-3">
                    <h5> Factura(s) y/o Nota(s) de Crédito</h5>
                    <div class="col-lg-12 mt-3 ml-2">
                        <table class="table tblIncidencias tablaFacturas" width="100%">
                            <thead>
                                <tr>
                                    <th>#</th>
                                    <th>Estatus</th>
                                    <th>Tipo</th>
                                    <th>Empresa</th>
                                    <th>Folio Fiscal</th>
                                    <th>Número</th>
                                    <th>Subtotal</th>
                                    <th>IVA</th>
                                    <th>Total</th>
                                    <th>Fecha de Carga</th>
                                    <th>Acciones</th>
                                </tr>
                            </thead>
                            <tbody id="AA">
                                @foreach (var fac in Model.Facturas)
                                {
                                    i++;
                                    <tr>
                                        <td>@i</td>
                                        <td class="@fac.Estatus.Fondo.Replace("bg","text") font-weight-bold">@fac.Estatus.Nombre</td>
                                        <td>@(fac.Tipo.Equals("NC") ? "Nota de Crédito":"Factura")</td>
                                        <td>@fac.Nombre</td>
                                        <td>
                                            @fac.UUID
                                        </td>
                                        <td>@fac.Folio</td>
                                        <td class="text-right">@String.Format(System.Globalization.CultureInfo.CurrentCulture, "{0:C}", fac.Subtotal)</td>
                                        <td class="text-right">@String.Format(System.Globalization.CultureInfo.CurrentCulture, "{0:C}", fac.IVA)</td>
                                        <td class="text-right">@String.Format(System.Globalization.CultureInfo.CurrentCulture, "{0:C}", fac.Total)</td>
                                        <td>@fac.FechaCreacion.ToString("dd/MMMM/yyyy")</td>
                                        <td class="text-center">
                                            <a href="#" class="viewConceptosF" id="viewConceptos_@fac.Id" data-factura="@fac.Id" data-toggle="tooltip" title="Mostrar/Ocultar el detalle de la factura" data-placement="top">
                                                <i class="fas fa-eye text-success mr-2"></i>
                                            </a>
                                            <a href="javascript:" class="verFactura" data-tipo="@fac.Tipo" data-archivo="@fac.ArchivoPDF"
                                               data-folio="@(fac.Serie+fac.Folio)" data-subtotal="@fac.Subtotal" data-total="@fac.Total"
                                               data-iva="@fac.IVA" data-toggle="tooltip" title="Ver y descargar el PDF" data-placement="top">
                                                <i class='fa-solid fa-file-pdf text-danger'></i>
                                            </a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <div class="col-lg-12 mt-3 ml-2 mb-3">
                        @foreach (var fac in Model.Facturas)
                        {
                            cf = 0;
                            <div class="row col-lg-12">
                                <div class="col-lg-12">
                                    <div class="conceptosFactura" id="conceptoFactura_@fac.Id">
                                        <h3>Conceptos de la @(fac.Tipo.Equals("Factura") ? "Factura" : "Nota de Crédito") con Folio: @fac.Folio</h3>
                                        <table id="@fac.Folio" style="width: 90%" class="table tableConceptos mt-3 float-right">
                                            <thead>
                                                <tr>
                                                    <th>#</th>
                                                    <th>Cantidad</th>
                                                    <th>Unidad</th>
                                                    <th>Descripción</th>
                                                    <th>Precio Unitario</th>
                                                    <th>SubTotal</th>
                                                    <th>IVA</th>
                                                    <th>Total</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var con in fac.ConceptosFactura)
                                                {
                                                    if (@fac.Id == con.FacturaId)
                                                    {
                                                        cf++;
                                                        <tr>
                                                            <td>@cf</td>
                                                            <td class="text-right">@String.Format(System.Globalization.CultureInfo.CurrentCulture, "{0:n0}", con.Cantidad)</td>
                                                            <td>@con.Unidad</td>
                                                            <td>@con.Descripcion</td>
                                                            <td class="text-right">@String.Format(System.Globalization.CultureInfo.CurrentCulture, "{0:C}", con.PrecioUnitario)</td>
                                                            <td class="text-right">@String.Format(System.Globalization.CultureInfo.CurrentCulture, "{0:C}", con.Subtotal)</td>
                                                            <td class="text-right">@String.Format(System.Globalization.CultureInfo.CurrentCulture, "{0:C}", con.IVA)</td>
                                                            <td class="text-right">@String.Format(System.Globalization.CultureInfo.CurrentCulture, "{0:C}", con.Subtotal + con.IVA)</td>
                                                        </tr>
                                                    }
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@if (Model.Cedula.Id != 0)
{
    <div class="row col-lg-12 mt-3" id="divCedula">
        <div class="col-lg-12">
            <div class="card">
                <div class="card-header cabeceraCedula">
                    <i class="fas fa-list-check mr-2"></i> Cédula de Evaluación
                </div>
                <div class="card-body cuerpoCedula">
                    <table class="table table-borderless">
                        <tr>
                            <td data-toggle="tooltip" title="Folio de evaluación asignado por el sistema" data-placement="top" style="font-family: Tahoma; font-size: 13.5px; letter-spacing: 0.8px;"><strong>Folio: </strong> @Model.Cedula.Folio</td>
                            <td data-toggle="tooltip" title="Año de evaluación del servicio" data-placement="top"><strong>Año: </strong>@Model.Cedula.Anio</td>
                            <td data-toggle="tooltip" title="Mes evaluado" data-placement="top"><strong>Mes: </strong>@Model.Cedula.Mes.Nombre</td>
                            <td data-toggle="tooltip" title="Administración/Inmueble evaluado" data-placement="top"><strong>Inmueble: </strong>@Model.Cedula.Inmueble.Nombre</td>
                            <td data-toggle="tooltip" title="Estatus de la cédula" data-placement="top">
                                <strong style="color: @(Model.Cedula.Estatus.FondoHexadecimal)"><b class="mr-1">Estatus:</b> @Html.Raw(Model.Cedula.Estatus.Icono) @Model.Cedula.Estatus.Nombre</strong>
                            </td>
                        </tr>
                    </table>
                    <div class="row col-lg-12 mt-3">
                        <div class="col-md-12">
                            <ul class="nav nav-tabs" id="myTab" role="tablist">
                                @foreach (var rs in Model.Cedula.respuestas)
                                {
                                    <li class="nav-item" role="presentation">
                                        <a class="nav-link" id="pregunta_@rs.cuestionario.Abreviacion" data-toggle="tab" href="#@rs.cuestionario.Abreviacion" role="tab" aria-controls="pregunta" aria-selected="false">
                                            @if (rs.Respuesta != null)
                                            {
                                                if ((rs.cuestionario.Abreviacion.Equals("FechaCierre") ||
                                                    rs.cuestionario.Abreviacion.Equals("ReporteServicios") ||
                                                       rs.cuestionario.Abreviacion.Equals("ListadoPersonal")) && rs.iFumigacion.Count() == 0)
                                                {
                                                    <i class="fas fa-circle-xmark mr-2 text-danger"></i> @Html.Raw("<b style='color: black;'>Pregunta " + @rs.Pregunta + "</b>")
                                                }
                                                else
                                                {
                                                    <i class="fas fa-circle-check mr-2 text-success"></i> @Html.Raw("<b style='color: black;'>Pregunta " + @rs.Pregunta + "</b>")
                                                }
                                            }
                                            else
                                            {
                                                <i class="fas fa-circle-xmark mr-2 text-danger"></i> @Html.Raw("<b style='color: black;'>Pregunta " + @rs.Pregunta + "</b>")
                                            }
                                        </a>
                                    </li>
                                }
                            </ul>
                            <div class="tab-content" id="myTabContent">
                                @foreach (var rs in Model.Cedula.respuestas)
                                {
                                    <div class="tab-pane fade mt-2 ml-3 " id="@rs.cuestionario.Abreviacion" role="tabpanel" aria-labelledby="pregunta-tab">
                                        <div class="row col-lg-12 h5 mt-3">
                                            <div class="col-lg-10">
                                                @rs.Pregunta.- @rs.cuestionario.Pregunta
                                                <a href="javascript:" class="text-primary ml-2 btnAyuda" data-toggle="tooltip" title="Ayuda" data-placement="top" data-ayuda="@rs.cuestionario.Ayuda">
                                                    <i class="fa-solid fa-circle-question"></i>
                                                </a>
                                                @if (Model.Permisos.Where(p => p.Permiso.Abreviacion.Equals("actualizar")).Count() != 0)
                                                {
                                                    @if (Model.Cedula.Estatus.Nombre.Equals("Rechazada") || Model.Cedula.Estatus.Nombre.Equals("En Proceso") ||
                                            Model.Cedula.Estatus.Nombre.Equals("Sin Iniciar"))
                                                    {
                                                        <div class="row col-lg-6 mt-2" style="display: @(rs.cuestionario.Abreviacion.Equals("FechaCierre") ||
                                                                                                rs.cuestionario.Abreviacion.Equals("ReporteServicios") ||
                                                                                                rs.cuestionario.Abreviacion.Equals("ListadoPersonal") ? "none": "block");">
                                                            <div class="icheck-success d-inline">
                                                                <input type="radio" name="@rs.cuestionario.Abreviacion" value="true" id="@String.Concat("radioSuccess", @i)" class="pregunta" data-pregunta="@rs.cuestionario.NoPregunta"
                                                                       data-pusuario="@rs.cuestionario.Consecutivo"
                                                                       data-obligatorio="@rs.ciFumigacion.Obligatorio"
                                                                       data-respuesta="@rs.ciFumigacion.Respuesta"
                                                                       data-abreviacion="@rs.cuestionario.Abreviacion">
                                                                <label for="@String.Concat("radioSuccess", @i)">Si</label>
                                                            </div>
                                                            @{
                                                                i++;
                                                            }
                                                            <div class="icheck-success d-inline ml-3">
                                                                <input type="radio" name="@rs.cuestionario.Abreviacion" value="false" id="@String.Concat("radioSuccess", @i)" class="pregunta" data-pregunta="@rs.cuestionario.NoPregunta"
                                                                       data-pusuario="@rs.cuestionario.Consecutivo"
                                                                       data-obligatorio="@rs.ciFumigacion.Obligatorio"
                                                                       data-respuesta="@rs.ciFumigacion.Respuesta"
                                                                       data-abreviacion="@rs.cuestionario.Abreviacion">
                                                                <label for="@String.Concat("radioSuccess", @i)">No</label>
                                                            </div>
                                                            @{
                                                                i++;
                                                            }
                                                        </div>
                                                    }
                                                }
                                            </div>
                                            <div class="col-lg-12 mt-2">
                                                @if (Model.Permisos.Where(p => p.Permiso.Abreviacion.Equals("actualizar")).Count() != 0)
                                                {
                                                    @if (Model.Cedula.Estatus.Nombre.Equals("Rechazada") || Model.Cedula.Estatus.Nombre.Equals("En Proceso") || Model.Cedula.Estatus.Nombre.Equals("Bloqueada") ||
                                                     Model.Cedula.Estatus.Nombre.Equals("Sin Iniciar"))
                                                    {
                                                        @if (rs.cuestionario.Incidencias &&
                                                    (rs.cuestionario.Abreviacion.Equals("ReporteServicios") ||
                                                    rs.cuestionario.Abreviacion.Equals("ListadoPersonal") || rs.cuestionario.Abreviacion.Equals("FechaCierre")))
                                                        {
                                                            if (rs.iFumigacion.Count() == 0)
                                                            {
                                                                <a href="javascript:" class="addIncidencia btn btn-sm btn-primary" data-pregunta="@rs.cuestionario.Consecutivo"
                                                                   data-preguntaid="@rs.cuestionario.Id"
                                                                   data-cedula="@rs.CedulaEvaluacionId"
                                                                   data-abreviacion="@rs.cuestionario.Abreviacion"
                                                                   data-titulo="@Model.CTIncidencias.Single(i=> i.Abreviacion.Equals(rs.cuestionario.Abreviacion)).Valor"
                                                                   data-respuesta="@rs.Respuesta"
                                                                   data-ayuda="@rs.ciFumigacion.Ayuda"
                                                                   data-incidenciaid="@Model.CTIncidencias.Single(i=> i.Abreviacion.Equals(rs.cuestionario.Abreviacion)).Id"
                                                                   data-toggle="tooltip" title="Agregar nueva incidencia" data-placement="top">
                                                                    <i class="fas fa-plus mr-1"></i> @(rs.cuestionario.Abreviacion.Contains("FechaCierre") ? "Registrar Fecha de Cierre": "Registrar")
                                                                </a>
                                                            }
                                                        }
                                                        else if (rs.cuestionario.Incidencias && rs.ciFumigacion.Obligatorio &&
                                                           (!rs.cuestionario.Abreviacion.Equals("ReporteServicios") &&
                                                            !rs.cuestionario.Abreviacion.Equals("ListadoPersonal") && !rs.cuestionario.Abreviacion.Contains("FechaCierre")))
                                                        {
                                                            <a href="javascript:" class="addIncidencia btn btn-sm btn-primary" data-pregunta="@rs.cuestionario.Consecutivo"
                                                               data-preguntaid="@rs.cuestionario.Id"
                                                               data-cedula="@rs.CedulaEvaluacionId"
                                                               data-abreviacion="@rs.cuestionario.Abreviacion"
                                                               data-titulo="@Model.CTIncidencias.Single(i=> i.Abreviacion.Equals(rs.cuestionario.Abreviacion)).Valor"
                                                               data-respuesta="@rs.Respuesta"
                                                               data-ayuda="@rs.ciFumigacion.Ayuda"
                                                               data-incidenciaid="@Model.CTIncidencias.Single(i=> i.Abreviacion.Equals(rs.cuestionario.Abreviacion)).Id"
                                                               data-toggle="tooltip" title="Agregar nueva incidencia" data-placement="top">
                                                                <i class="fas fa-plus mr-1"></i> Registrar Incidencia
                                                            </a>
                                                        }
                                                    }
                                                }
                                            </div>
                                        </div>
                                        @if (rs.cuestionario.Incidencias && rs.iFumigacion.Count() != 0)
                                        {
                                            ci = 0;
                                            <div class="row mt-3">
                                                <div class="col-lg-12">
                                                    <table class="table tblIncidencias" width="100%">
                                                        <thead>
                                                            <tr>
                                                                <th>#</th>
                                                                <th>Tipo</th>
                                                                @if (@rs.ciFumigacion.FaunaNociva)
                                                                {
                                                                    <th>Tipo de fauna</th>
                                                                    <th>Fauna nociva</th>
                                                                }

                                                                @if (@rs.ciFumigacion.Detalles)
                                                                {
                                                                    <th>Servicio de fumigación</th>
                                                                }

                                                                @if (@rs.ciFumigacion.FechaProgramada)
                                                                {
                                                                    <th>
                                                                        @(@rs.ciFumigacion.MesSua ? "Fecha de entrega":
                                                                      rs.ciFumigacion.Pregunta == 1 ? "Fecha de cierre":"Fecha programada")
                                                                    </th>
                                                                }

                                                                @if (@rs.ciFumigacion.FechaRealizada)
                                                                {
                                                                    <th>@(@rs.ciFumigacion.FaunaNociva ? "Fecha de fumigación": "Fecha realizada")</th>
                                                                }

                                                                @if (@rs.ciFumigacion.FechaRealizada && @rs.ciFumigacion.FechaProgramada)
                                                                {
                                                                    <th>Días de atraso</th>
                                                                }

                                                                @if (@rs.ciFumigacion.HoraProgramada)
                                                                {
                                                                    <th>Hora programada</th>
                                                                }

                                                                @if (@rs.ciFumigacion.HoraRealizada)
                                                                {
                                                                    <th>Hora realizada</th>
                                                                }

                                                                @if (@rs.ciFumigacion.HoraProgramada && @rs.ciFumigacion.HoraRealizada)
                                                                {
                                                                    <th>Horas de atraso</th>
                                                                }

                                                                @if (@rs.ciFumigacion.FechaReaparicion)
                                                                {
                                                                    <th>Fecha de reaparicion</th>
                                                                }

                                                                @if (@rs.ciFumigacion.MesSua)
                                                                {
                                                                    <th>Mes Correspondiente</th>
                                                                }

                                                                @if (@rs.ciFumigacion.Observaciones)
                                                                {
                                                                    <th>Observaciones</th>
                                                                }

                                                                @if (!Model.Cedula.Estatus.Nombre.Equals("Rechazada") && !Model.Cedula.Estatus.Nombre.Equals("En Proceso") &&
                                                               !Model.Cedula.Estatus.Nombre.Equals("Sin Iniciar"))
                                                                {
                                                                    <th>Monto penalización</th>
                                                                }

                                                                @if (Model.Cedula.Estatus.Nombre.Equals("Rechazada") || Model.Cedula.Estatus.Nombre.Equals("En Proceso") ||
                                                                 Model.Cedula.Estatus.Nombre.Equals("Sin Iniciar"))
                                                                {
                                                                    <th>Acciones</th>
                                                                }
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            @foreach (var inc in rs.iFumigacion)
                                                            {
                                                                ci++;
                                                                <tr>
                                                                    <td>@ci</td>
                                                                    <td>@rs.cuestionario.Concepto</td>
                                                                    @if (@rs.ciFumigacion.FaunaNociva)
                                                                    {
                                                                        <td>@inc.DIncidencia.Tipo</td>
                                                                        <td>@inc.DIncidencia.Nombre</td>
                                                                    }

                                                                    @if (@rs.ciFumigacion.Detalles)
                                                                    {
                                                                        <td>@inc.DIncidencia.Nombre</td>
                                                                    }

                                                                    @if (@rs.ciFumigacion.FechaProgramada)
                                                                    {
                                                                        <td>@Convert.ToDateTime(inc.FechaProgramada).ToString("dd/MM/yyyy")</td>
                                                                    }

                                                                    @if (@rs.ciFumigacion.FechaRealizada)
                                                                    {
                                                                        <td>@Convert.ToDateTime(inc.FechaRealizada).ToString("dd/MM/yyyy")</td>
                                                                    }

                                                                    @if (@rs.ciFumigacion.FechaReaparicion)
                                                                    {
                                                                        <td>@Convert.ToDateTime(inc.FechaReaparicion).ToString("dd/MM/yyyy")</td>
                                                                    }

                                                                    @if (@rs.ciFumigacion.FechaProgramada && @rs.ciFumigacion.FechaRealizada)
                                                                    {
                                                                        <td>@inc.DiasAtraso</td>
                                                                    }

                                                                    @if (@rs.ciFumigacion.HoraProgramada)
                                                                    {
                                                                        <td>@(Convert.ToDateTime(inc.HoraProgramada).ToString("HH:mm tt"))</td>
                                                                    }

                                                                    @if (@rs.ciFumigacion.HoraRealizada)
                                                                    {
                                                                        <td>@(Convert.ToDateTime(inc.HoraRealizada).ToString("HH:mm tt"))</td>
                                                                    }

                                                                    @if (@rs.ciFumigacion.HoraProgramada && @rs.ciFumigacion.HoraRealizada)
                                                                    {
                                                                        <td>@inc.HorasAtraso</td>
                                                                    }

                                                                    @if (@rs.ciFumigacion.MesSua)
                                                                    {
                                                                        <td>@inc.Mes.Nombre</td>
                                                                    }

                                                                    @if (@rs.ciFumigacion.Observaciones)
                                                                    {
                                                                        <td>@inc.Observaciones</td>
                                                                    }

                                                                    @if (!Model.Cedula.Estatus.Nombre.Equals("Rechazada") && !Model.Cedula.Estatus.Nombre.Equals("En Proceso") &&
                                                                 !Model.Cedula.Estatus.Nombre.Equals("Sin Iniciar"))
                                                                    {
                                                                        <td>@String.Format(System.Globalization.CultureInfo.CurrentCulture, "{0:C}", @inc.MontoPenalizacion)</td>
                                                                    }

                                                                    @if (Model.Cedula.Estatus.Nombre.Equals("Rechazada") || Model.Cedula.Estatus.Nombre.Equals("En Proceso") ||
                                                                     Model.Cedula.Estatus.Nombre.Equals("Sin Iniciar"))
                                                                    {
                                                                        <td>
                                                                            <a href="javascript:" class="editIncidencia" data-pregunta="@rs.cuestionario.Consecutivo"
                                                                               data-abreviacion="@rs.cuestionario.Abreviacion" data-incidencia="@inc.Id"
                                                                               data-titulo="@Model.CTIncidencias.Single(i=> i.Abreviacion.Equals(rs.cuestionario.Abreviacion)).Valor"
                                                                               data-incidenciaid="@inc.IncidenciaId"
                                                                               data-tipofauna="@inc.DIncidencia.Id"
                                                                               data-fechap="@inc.FechaProgramada"
                                                                               data-fechar="@inc.FechaRealizada"
                                                                               data-fecharp="@inc.FechaReaparicion"
                                                                               data-horap="@inc.HoraProgramada"
                                                                               data-horar="@inc.HoraRealizada"
                                                                               data-preguntaid="@rs.cuestionario.Id" data-mesid="@inc.MesId"
                                                                               data-observaciones="@inc.Observaciones">
                                                                                <i class="fas fa-pencil text-primary"></i>
                                                                            </a>
                                                                            <a href="javascript:" class="eliminarIncidencia ml-2"
                                                                               data-titulo="@Model.CTIncidencias.Single(i=> i.Abreviacion.Equals(rs.cuestionario.Abreviacion)).Valor"
                                                                               data-abreviacion="@rs.cuestionario.Abreviacion"
                                                                               data-respuesta="@rs.Respuesta"
                                                                               data-id="@inc.Id">
                                                                                <i class="fas fa-times text-danger"></i>
                                                                            </a>
                                                                        </td>
                                                                    }
                                                                </tr>
                                                            }
                                                        </tbody>
                                                        @if (!Model.Cedula.Estatus.Nombre.Equals("Rechazada") && !Model.Cedula.Estatus.Nombre.Equals("En Proceso") &&
                                                          !Model.Cedula.Estatus.Nombre.Equals("Sin Iniciar"))
                                                        {
                                                            <tfoot>

                                                            </tfoot>
                                                        }
                                                    </table>
                                                </div>
                                            </div>

                                        }
                                        else if (rs.cuestionario.Incidencias && rs.iFumigacion.Count() == 0)
                                        {
                                            ci = 0;
                                            <div class="row col-lg-12 mt-3">
                                                <table class="table">
                                                    <thead>
                                                        <tr>
                                                            <th>#</th>
                                                            <th>Respuesta</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <tr>
                                                            <td>1</td>
                                                            <td>@rs.ciFumigacion.RespuestaCedula</td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </div>
                                        }
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row col-lg-12 mt-3" id="divEntregables">
        <div class="col-lg-12">
            <div class="card">
                <div class="card-header cabeceraEntregables">
                    <i class="fa-sharp fa-light fa-paperclip mr-2"></i> Entregables
                </div>
                <div class="card-body cuerpoEntregables" style="display: none">
                    <table class="table row-border dataTable" width="100%">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Entregable</th>
                                <th>Usuario</th>
                                <th>Archivo</th>
                                <th>Estatus</th>
                                <th>Última actualización</th>
                                <th>Acciones</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var en in Model.Cedula.entregables)
                            {
                                var fe = Model.FlujoEntregables.SingleOrDefault(fe => fe.EntregableId == en.EntregableId &&
                                                                                        fe.Flujo.Equals(Model.Supervision));
                                ce++;
                                <tr>
                                    <td>@ce</td>
                                    <td>@en.tipoEntregable.Nombre</td>
                                    <td>@(System.Globalization.CultureInfo.CurrentCulture.TextInfo.ToTitleCase((en.usuario.NombreEmp + " " + en.usuario.PaternoEmp + " " + en.usuario.MaternoEmp).ToLower()))</td>
                                    <td class="font-weight-bold @(en.Archivo != null && !en.Archivo.Equals("") ? "text-success" : "text-danger")">@(en.Archivo != null && !en.Archivo.Equals("") ? en.Archivo : "Sin Adjuntar")</td>
                                    <td style="color: @en.estatus.FondoHexadecimal; font-weight: bold;">
                                        @Html.Raw(en.estatus.Nombre + " ")
                                    </td>
                                    <td>@(Convert.ToDateTime(en.FechaActualizacion).ToString("dd/MM/yyyy").Equals("01/01/0001") ? "-" : Convert.ToDateTime(en.FechaActualizacion).ToString("dd/MM/yyyy HH:mm tt"))</td>
                                    <td>
                                        @if (en.Archivo != null && !en.Archivo.Equals(""))
                                        {
                                            <a class="verEntregable" href="javascript:" data-toggle="tooltip" title="Ver @en.tipoEntregable.Nombre"
                                               data-placement="top" data-tipo="@en.tipoEntregable.Nombre" data-id="@en.Id" data-archivo="@en.Archivo"
                                               data-observaciones="@en.Observaciones">
                                                <i class="fas fa-eye text-success mr-2"></i>
                                            </a>       
                                        }

                                        @if (Model.Permisos.Where(p => p.Permiso.Abreviacion.Equals("editarEntregable")).Count() != 0 &&
                              (fe != null ? fe.Editable : false) && !en.estatus.Nombre.Equals("Autorizado"))
                                        {
                                            <a class="editarEntregable" href="javascript:" data-toggle="tooltip" title="Cargar @en.tipoEntregable.Nombre"
                                               data-placement="top" data-tipo="@en.tipoEntregable.Nombre" data-id="@en.Id"
                                               data-entregableid="@en.EntregableId" data-file="@en.Archivo">
                                                <i class="fas fa-pencil text-primary mr-2"></i>
                                            </a>
                                        }

                                        @if (Model.Permisos.Where(p => p.Permiso.Abreviacion.Equals("autorizarEntregable")).Count() != 0 && (fe != null ? fe.Autorizar : false)
                               && !en.estatus.Nombre.Equals("Autorizado"))
                                        {
                                            <a class="autorizarEntregable" href="javascript:" data-toggle="tooltip" title="Autorizar @en.tipoEntregable.Nombre"
                                               data-placement="top" data-tipo="@en.tipoEntregable.Nombre" data-id="@en.Id" data-entregableid="@en.EntregableId">
                                                <i class="fas fa-check text-success mr-2"></i>
                                            </a>
                                        }

                                        @if (Model.Permisos.Where(p => p.Permiso.Abreviacion.Equals("rechazarEntregable")).Count() != 0 && (fe != null ? fe.Rechazar : false)
                               && !en.estatus.Nombre.Equals("Rechazado"))
                                        {
                                            <a class="rechazarEntregable" href="javascript:" data-toggle="tooltip" title="Rechazar @en.tipoEntregable.Nombre"
                                               data-placement="top" data-tipo="@en.tipoEntregable.Nombre" data-id="@en.Id" data-entregableid="@en.EntregableId">
                                                <i class="fas fa-times text-danger"></i>
                                            </a>
                                        }

                                        @if (en.tipoEntregable.Abreviacion.Equals("ActaER") && !en.estatus.Nombre.Equals("Autorizado") &&
                          (Model.Cedula.Estatus.Nombre.Equals("Autorizada") || Model.Cedula.Estatus.Nombre.Equals("Trámite Rechazado")))
                                        {
                                            <a href="javascript:" class="generaAER">
                                                <i class="fa-sharp fa-regular fa-file-word"></i>
                                            </a>
                                        }

                                        @if (en.tipoEntregable.Abreviacion.Equals("Cedula_Firmada") && !en.estatus.Nombre.Equals("Autorizado") &&
                          (Model.Cedula.Estatus.Nombre.Equals("Enviada a DAS") || Model.Cedula.Estatus.Nombre.Equals("Autorizada") || Model.Cedula.Estatus.Nombre.Equals("Trámite Rechazado")))
                                        {
                                            <a class="generarCedula" href="javascript:" data-toggle="tooltip" title="Generar la Cédula de Evaluación"
                                               data-placement="top" data-tipo="@en.tipoEntregable.Nombre" data-id="@en.Id">
                                                <i class="fal fa-file-pdf text-success mr-2"></i>
                                            </a>
                                        }

                                        @if ((en.tipoEntregable.Abreviacion.Equals("Memorandum") ||
                                        en.tipoEntregable.Abreviacion.Equals("Cedula_Firmada") ||
                                        en.tipoEntregable.Abreviacion.Equals("ActaER")) && !en.Validado
                               && Model.Cedula.Estatus.Nombre.Equals("En Trámite") && en.estatus.Nombre.Equals("Autorizado"))
                                        {
                                            <a class="validarEntregable" href="javascript:" data-toggle="tooltip" title="Validar @en.tipoEntregable.Nombre"
                                               data-placement="top" data-tipo="@en.tipoEntregable.Nombre" data-id="@en.Id" data-estatusid="@en.EstatusId"
                                               data-entregableid="@en.EntregableId">
                                                <i class="fa-regular fa-check-double text-primary ml-2"></i>
                                            </a>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="card-footer">
                    @if (Model.Cedula.Estatus.Nombre.Equals("Rechazada") || Model.Cedula.Estatus.Nombre.Equals("En Proceso") ||
                      Model.Cedula.Estatus.Nombre.Equals("Sin Iniciar"))
                    {
                        <a href="javascript:" class="btn btn-sm btn-primary guardarCedula float-right">
                            Guardar Respuestas
                        </a>
                        @foreach (var bt in Model.Flujo)
                        {
                            if (bt.EstatusId == Model.Cedula.EstatusId && Model.Permisos.Where(p => p.Permiso.Abreviacion.Equals(bt.ESucesivo.Abreviacion)).Count() > 0)
                            {
                                @Html.Raw(bt.Boton)
                            }
                        }
                    }
                    else
                    {
                        @foreach (var bt in Model.Flujo)
                        {
                            if (bt.EstatusId == Model.Cedula.EstatusId && Model.Permisos.Where(p => p.Permiso.Abreviacion.Equals(bt.ESucesivo.Abreviacion)).Count() > 0)
                            {
                                @Html.Raw(bt.Boton)
                            }
                        }
                    }

                    @if (Model.Cedula.Bloqueada && Model.Permisos.Where(p => p.Permiso.Abreviacion.Equals("denegar")).Count() > 0)
                    {
                        <a href="javascript:" class="btn btn-sm bg-correccion denegarRechazo float-right mr-2"
                           data-estatus="Denegar el rechazo de la cédula">
                            Denegar Rechazo
                        </a>
                    }

                    @if (Model.Cedula.Bloqueada && Model.Permisos.Where(p => p.Permiso.Abreviacion.Equals("cancelar")).Count() > 0)
                    {
                        <a href="javascript:" class="btn btn-sm bg-danger cancelarRechazo float-right mr-2"
                           data-estatus="Cancelar el rechazo de la cédula">
                            Cancelar Rechazo
                        </a>
                    }
                </div>
            </div>
        </div>
    </div>

    @if (Model.Cedula.EstatusId > 2 && (Model.Cedula.respuestas.Sum(r => r.MontoPenalizacion) != (decimal)0 || Model.Cedula.Penalizacion != (decimal)0))
    {
        <div class="row col-lg-12 mt-3" id="divPenalizaciones">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-header cabeceraPenalizaciones">
                        <i class="fa-regular fa-messages-dollar mr-2"></i> Penalizaciones y deductivas
                    </div>
                    <div class="card-body cuerpoPenalizaciones" style="display: none">
                        <p class="text-justify text-primary font-weight-bold h5">Únicamente solicitar al prestador de servicios la nota de crédito por el(los) concepto(s) del total de deductivas, en caso de que aplique.</p>
                        <ul class="mb-0 fa-ul">
                            <li class="medium mt-3"><span class="fa-li"><i class="fas fa-lg fa-calendar"></i></span>Evaluación correspondiente al mes de <b>@Model.Cedula.Mes.Nombre</b> del año <b>@Model.Cedula.Anio</b></li>
                            <li class="medium mt-3"><span class="fa-li"><i class="fas fa-lg fa-building-circle-check"></i></span><b>Inmueble:</b> @Model.Inmueble.Nombre</li>
                        </ul>
                        <h5 class="mt-3">Deductivas</h5>
                        <table class="table row-border dataTable" width="100%">
                            <thead>
                                <tr>
                                    <th class="text-center">Pregunta</th>
                                    <th>Tipo</th>
                                    <th>Concepto</th>
                                    <th class="text-right">Monto</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var rs in Model.Cedula.respuestas)
                                {
                                    if (rs.MontoPenalizacion != 0 && rs.cuestionario.Tipo.Equals("Deductiva"))
                                    {
                                        <tr>
                                            <td class="text-center">@rs.Pregunta</td>
                                            <td>Deductiva</td>
                                            <td>@Html.Raw(rs.cuestionario.Icono) @rs.cuestionario.Concepto</td>
                                            <td class="text-right text-primary font-weight-bold">@String.Format(System.Globalization.CultureInfo.CurrentCulture, "{0:C}", @rs.MontoPenalizacion)</td>
                                        </tr>
                                        tdeductivas += rs.cuestionario.Tipo.Equals("Deductiva") ? (decimal)rs.MontoPenalizacion : (decimal)0;
                                    }
                                }

                                @if (Model.Cedula.Penalizacion != 0)
                                {
                                    <tr>
                                        <td class="text-center">-</td>
                                        <td>Deductiva</td>
                                        <td><i class="fa-sharp fa-regular fa-thumbs-up mr-2"></i> Calidad y eficiencia del servicio</td>
                                        <td class="text-right text-primary font-weight-bold">@String.Format(System.Globalization.CultureInfo.CurrentCulture, "{0:C}", Model.Cedula.Penalizacion)</td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot>
                                @if (tdeductivas != 0)
                                {
                                    <tr class="font-weight-bold text-primary">
                                        <td class="text-center">Total de deductivas</td>
                                        <td class="text-center">@String.Format(System.Globalization.CultureInfo.CurrentCulture, "{0:C}", tdeductivas)</td>
                                        <td></td>
                                        <td></td>
                                    </tr>
                                }
                            </tfoot>
                        </table>
                        <h5>Penalizaciones</h5>
                        <table class="table row-border dataTable" width="100%">
                            <thead>
                                <tr>
                                    <th class="text-center">Pregunta</th>
                                    <th>Tipo</th>
                                    <th>Concepto</th>
                                    <th class="text-right">Monto</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var rs in Model.Cedula.respuestas)
                                {
                                    if (rs.MontoPenalizacion != 0 && rs.cuestionario.Tipo.Equals("Penalizacion"))
                                    {
                                        <tr>
                                            <td class="text-center">@rs.Pregunta</td>
                                            <td>Penalización</td>
                                            <td>@Html.Raw(rs.cuestionario.Icono) @rs.cuestionario.Concepto</td>
                                            <td class="text-right text-danger font-weight-bold">@String.Format(System.Globalization.CultureInfo.CurrentCulture, "{0:C}", @rs.MontoPenalizacion)</td>
                                        </tr>
                                        tpenalizacion += rs.cuestionario.Tipo.Equals("Penalizacion") ? (decimal)rs.MontoPenalizacion : (decimal)0;
                                    }
                                }
                            </tbody>
                            <tfoot>
                                @if (tpenalizacion != 0)
                                {
                                    <tr class="font-weight-bold text-danger">
                                        <td class="text-center">Total de penalizaciones</td>
                                        <td class="text-center">@String.Format(System.Globalization.CultureInfo.CurrentCulture, "{0:C}", tpenalizacion)</td>
                                        <td></td>
                                        <td></td>
                                    </tr>
                                }
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    }


    <div class="row col-lg-12 mt-3" id="divHistorialCedula">
        <div class="col-lg-12">
            <div class="card">
                <div class="card-header cabeceraSegCedula">
                    <i class="fal fa-timeline-arrow mr-2"></i> Seguimiento a la cédula
                </div>
                <div class="card-body cuerpoSegCedula" style="display: none">
                    <table class="table dataTable tblLogCedula" width="100%">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Usuario</th>
                                <th>Estatus</th>
                                <th>Comentarios</th>
                                <th>Última actualización</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var lg in Model.Cedula.logs)
                            {
                                lc++;
                                <tr>
                                    <td>@lc</td>
                                    <td>@(System.Globalization.CultureInfo.CurrentCulture.TextInfo.ToTitleCase((lg.Usuario.NombreEmp + " " + lg.Usuario.PaternoEmp + " " + lg.Usuario.MaternoEmp).ToLower()))</td>
                                    <td style="color: @(lg.Estatus.FondoHexadecimal); font-weight: bold;">@lg.Estatus.Nombre</td>
                                    <td>@Html.Raw(lg.Observaciones)</td>
                                    <td>@Convert.ToDateTime(lg.FechaCreacion).ToString("dd/MM/yyyy hh:mm tt")</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <div class="row col-lg-12 mt-3" id="divHistorialEntregables">
        <div class="col-lg-12">
            <div class="card">
                <div class="card-header cabeceraSegEntregables">
                    <i class="fa-light fa-timeline mr-2"></i> Seguimiento a entregables
                </div>
                <div class="card-body cuerpoSegEntregables" style="display: none">
                    <table class="table dataTable tblLogEntregables" width="100%">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Usuario</th>
                                <th>Archivo</th>
                                <th>Estatus</th>
                                <th>Comentarios</th>
                                <th>Última actualización</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{ lc = 0;}
                            @foreach (var lg in Model.Cedula.logsEntregables)
                            {
                                lc++;
                                <tr>
                                    <td>@lc</td>
                                    <td>@(System.Globalization.CultureInfo.CurrentCulture.TextInfo.ToTitleCase((lg.Usuario.NombreEmp + " " + lg.Usuario.PaternoEmp + " " + lg.Usuario.MaternoEmp).ToLower()))</td>
                                    <td>@lg.Entregable.Nombre</td>
                                    <td style="color: @(lg.Estatus.FondoHexadecimal); font-weight: bold;">@lg.Estatus.Nombre</td>
                                    <td>@Html.Raw(lg.Observaciones)</td>
                                    <td>@Convert.ToDateTime(lg.FechaCreacion).ToString("dd/MM/yyyy hh:mm tt")</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
}

@* Modal para la captura de la Factura *@
<div class="modal fade" id="modalXML">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-joke">
                <h4 class="modal-title text-white">Adjuntar XML</h4>
                <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" style="height: 200px;">
                <div class="row">
                    <div class="form-group col-lg-4">
                        <label>Tipo de XML</label>
                        <select class="form-control" id="TipoDocumentacion">
                            <option value="">Seleccione la Documentación</option>
                            <option value="Factura">Factura</option>
                            <option value="NC">Nota de Crédito</option>
                        </select>
                        <div class="col-sm-12" id="error_TipoDocumentacion">
                            <small id="dateHelp" class="text-danger">
                                Por favor seleccione el tipo de documentación
                            </small>
                        </div>
                    </div>
                    <div class="form-group col-lg-6">
                        <label for="elegirArchivo">Seleccionar Archivo XML: </label>
                        <div class="custom-file">
                            <input type="file" class="custom-file-input" id="fileXML" accept=".xml, .XML" asp-for="XML">
                            <label class="custom-file-label" for="customFile">Seleccionar Archivo</label>
                        </div>
                        <div class="col-sm-12" id="error_fileXML">
                            <small id="dateHelp" class="text-danger">
                                No ha seleccionado el archivo XML o ha subido un archivo diferente a XML
                            </small>
                        </div>
                    </div>
                    <div class="form-group col-lg-6">
                        <label for="elegirArchivo">Seleccionar Archivo PDF: </label>
                        <div class="custom-file">
                            <input type="file" class="custom-file-input" id="filePDF" accept=".pdf, .PDF">
                            <label class="custom-file-label custom-pdf" for="customFile">Seleccionar Archivo</label>
                        </div>
                        <div class="col-sm-12" id="error_filePDF">
                            <small id="dateHelp" class="text-danger">
                                No ha seleccionado el archivo PDF o ha subido un archivo diferente a PDF
                            </small>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer justify-content-end">
                <button type="submit" class="btn btn-primary" id="adjuntarArchivo">Subir</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
@*Fin Modal para la captura de la Factura*@

@* Modal para la captura de Incidencias *@
<div class="modal fade" id="modal-incidencias">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header bg-joke">
                <h4 class="modal-title text-white">Registrar Incidencia</h4>
                <button type="button" class="close close-incidencias text-white" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="form-row">
                            <input type="hidden" id="campoIdIncidencia" />
                            <input type="hidden" id="campoIncidenciaId" />
                            <input type="hidden" id="campoPregunta" />
                            <input type="hidden" id="campoPreguntaId" />
                            <div class="form-group col-md-3" id="divFechaProgramada">
                                <label for="fechaIncidencia">Fecha Programada: </label>
                                <input type="date" class="form-control" id="campoFechaProgramada" name="fechaProgramada">
                                <div class="col-sm-12" id="error_campoFechaProgramada">
                                    <small id="dateHelp" class="text-danger">
                                        Capture la fecha programada
                                    </small>
                                </div>
                            </div>
                            <div class="form-group col-md-3" id="divFechaRealizada">
                                <label for="fechaIncidencia">Fecha Realizada: </label>
                                <input type="date" class="form-control" id="campoFechaRealizada" name="fechaRealizada">
                                <div class="col-sm-12" id="error_campoFechaRealizada">
                                    <small id="dateHelp" class="text-danger">
                                        Capture la fecha programada
                                    </small>
                                </div>
                            </div>
                            <div class="form-group col-md-3" id="divFechaReaparicion">
                                <label for="fechaIncidencia">Fecha Reaparición: </label>
                                <input type="date" class="form-control" id="campoFechaReaparicion" name="fechaRealizada">
                                <div class="col-sm-12" id="error_campoFechaReaparicion">
                                    <small id="dateHelp" class="text-danger">
                                        Capture la fecha reaparición
                                    </small>
                                </div>
                            </div>
                            <div class="form-group col-md-3" id="divHoraProgramada">
                                <label for="horaSolicitud">Hora Programada: </label>
                                <input type="time" id="campoHoraProgramada" class="form-control">
                                <div class="col-sm-12" id="error_campoHoraProgramada">
                                    <small id="dateHelp" class="text-danger">
                                        Por favor capture la Hora Programada
                                    </small>
                                </div>
                            </div>
                            <div class="form-group col-md-3" id="divHoraRealizada">
                                <label for="horaRealizada">Hora Realizada: </label>
                                <input type="time" id="campoHoraRealizada" class="form-control">
                                <div class="col-sm-12" id="error_campoHoraRealizada">
                                    <small id="dateHelp" class="text-danger">
                                        Por favor capture la Hora Realizada
                                    </small>
                                </div>
                            </div>
                            <div class="row col-lg-12" id="divCampoPO">
                                <div class="form-row col-lg-12">
                                    <div class="col-lg-5">
                                        <label for="tipoIncidencia">Servicio de Fumigación:</label>
                                        <select class="form-control" id="campoActividadPO">
                                        </select>
                                        <div class="col-sm-12" id="error_campoActividadPO">
                                            <small id="dateHelp" class="text-danger">
                                                Seleccione el servicio de fumigación
                                            </small>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row col-lg-12" id="divCampoTipoFauna">
                                <div class="form-row col-lg-12">
                                    <div class="col-lg-5">
                                        <label for="tipoIncidencia">Tipo de Fauna:</label>
                                        <select class="form-control" id="campoTipoFauna">
                                        </select>
                                        <div class="col-sm-12" id="error_campoTipoFauna">
                                            <small id="dateHelp" class="text-danger">
                                                Seleccione el tipo de fauna
                                            </small>
                                        </div>
                                    </div>
                                    <div class="col-lg-3">
                                        <label for="areaIncidencia">Fauna:</label>
                                        <select class="form-control" id="campoFauna">
                                        </select>
                                        <div class="col-sm-12" id="error_campoFauna">
                                            <small id="dateHelp" class="text-danger">
                                                Seleccione la fauna
                                            </small>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group col-lg-3" id="divSuaMes">
                                <label for="tipoIncidencia">Mes Correspondiente:</label>
                                <select class="form-control" id="campoSuaMes">
                                    <option value="0">Seleccione un Mes</option>
                                    @foreach (var ms in Model.Meses)
                                    {
                                        <option value="@ms.Id">@ms.Nombre</option>
                                    }
                                </select>
                                <div class="col-sm-12" id="error_campoSuaMes">
                                    <small id="dateHelp" class="text-danger">
                                        Seleccione el mes correspondiente
                                    </small>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row mt-2" id="divObservaciones">
                    <div class="col-lg-12">
                        <div class="form-row col-lg-12">
                            <label for="campoObservaciones">Observaciones:</label>
                            <textarea type="textarea" id="campoObservaciones" class="form-control" style="resize: none;" maxlength="256"></textarea>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="guardaIncidencia">Guardar Incidencia</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
@* Modal para la captura de Incidencias *@

@* Modal para la captura de los entregables *@
<div class="modal fade" id="modalEntregables">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-joke">
                <h4 class="modal-title text-white tituloEntregable"></h4>
                <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="campoIdEntregable" />
                <input type="hidden" id="campoTipoEntregable" />
                <input type="hidden" id="campoentregableid" />
                <div class="form-group col-lg-12">
                    <p id="notaEntregable"></p>
                </div>
                <div class="form-group col-lg-8">
                    <label for="elegirArchivo">Seleccionar Archivo PDF: </label>
                    <div class="custom-file">
                        <input type="file" class="custom-file-input" id="entregablePDF" accept=".pdf, .PDF">
                        <label class="custom-file-label custom-pdf" for="customFile">Seleccionar Archivo</label>
                    </div>
                    <div class="col-sm-12" id="error_entregablePDF">
                        <small id="dateHelp" class="text-danger">
                            No ha seleccionado el archivo PDF o ha subido un archivo diferente a PDF
                        </small>
                    </div>
                </div>
            </div>
            <div class="modal-footer justify-content-end">
                <button type="submit" class="btn btn-primary" id="guardarEntregable">Adjuntar</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
@*Fin Modal para la captura de los entregables *@

@*Modal para ver los Entregables*@
<div class="modal fade" id="modalVerEntregables">
    <div class="modal-dialog modal-xl-view">
        <div class="modal-content">
            <div class="modal-header bg-joke">
                <h4 class="modal-title text-white" id="titleVerEntregables"></h4>
                <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body-view">
                <div class="row col-lg-12" id="detalleEntregable"></div>
                <div class="table-responsive">
                    <div class="row mb-2 col-lg-12" id="objectPdf">
                    </div>
                </div>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
@*Fin Modal para ver los Entregables*@

@*Modal para ver la factura*@
<div class="modal fade" id="modalVerEntregableFactura">
    <div class="modal-dialog modal-xl-view">
        <div class="modal-content">
            <div class="modal-header bg-joke">
                <h4 class="modal-title text-white" id="titleVerEntregables"></h4>
                <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body-view">
                <div class="row col-lg-12" id="detalleEntregable"></div>
                <div class="table-responsive">
                    <div class="row mb-2 col-lg-12" id="objectPdf">
                    </div>
                </div>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
@*Fin Modal para ver la factura*@

<style>
    .titulo-principal {
        font-family: Arial, sans-serif;
        font-size: 20px;
        color: #24135f;
        text-align: left;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);
        animation: fadeIn 2s ease-in-out;
        font-weight: bold;
        position: relative; /* Agrega esta línea */
        top: -5px; /* Ajusta el valor según sea necesario */
        right: -10px;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
        }

        to {
            opacity: 1;
        }
    }

    .botonregreso {
        position: relative; /* Agrega esta línea */
        left: -33px;
    }

    .cabeceraInformacion {
        background-color: #ffffff;
        padding: 10px;
        cursor: pointer;
        font-weight: bold;
    }

    .cabeceraInformacionG {
        background-color: #ffffff;
        padding: 10px;
        cursor: pointer;
        font-weight: bold;
    }

    .cabeceraContrato {
        background-color: #ffffff;
        padding: 10px;
        cursor: pointer;
        font-weight: bold;
    }

    .cabeceraInmueble {
        background-color: #ffffff;
        padding: 10px;
        cursor: pointer;
        font-weight: bold;
    }

    .cabeceraFacturacion {
        background-color: #ffffff;
        padding: 10px;
        cursor: pointer;
        font-weight: bold;
    }

    .cabeceraCedula {
        background-color: #ffffff;
        padding: 10px;
        cursor: pointer;
        font-weight: bold;
    }

    .cabeceraEntregables {
        background-color: #ffffff;
        padding: 10px;
        cursor: pointer;
        font-weight: bold;
    }

    .cabeceraPenalizaciones {
        background-color: #ffffff;
        padding: 10px;
        cursor: pointer;
        font-weight: bold;
    }

    .cabeceraGuiasNE {
        background-color: #ffffff;
        padding: 10px;
        cursor: pointer;
        font-weight: bold;
    }

    .cabeceraSegCedula {
        background-color: #ffffff;
        padding: 10px;
        cursor: pointer;
        font-weight: bold;
    }

    .cabeceraSegEntregables {
        background-color: #ffffff;
        padding: 10px;
        cursor: pointer;
        font-weight: bold;
    }

    td table tr:first-child td {
        border-top: none !important;
        padding-top: 0 !important;
    }

    .swal-wide {
        width: 800px !important;
    }
</style>

@*Modal para actualizar firmantes*@
<div class="modal fade" id="modal-firmante">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-joke">
                <h4 class="modal-title text-white">Capturar Firmantes</h4>
                <button type="button" class="close close-incidencias text-white" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <input type="hidden" id="idFirmante" />
                    <div class="row col-lg-12 font-weight-bold">
                        <h4>Revisó: </h4>
                        <br />
                    </div>
                    <div class="form-row col-md-4" id="divInmuebleReviso">
                        <label for="firmanteActual">Inmueble:</label>
                        <select class="form-control inmuebleReviso" disabled>
                            <option value="">Seleccione un Inmueble</option>
                            @foreach (var inm in Model.InmueblesFirmantes)
                            {
                                <option value="@inm.Id">@inm.Nombre</option>
                            }
                        </select>
                    </div>
                    <div class="form-row col-md-3" id="divEscolaridadA">
                        <label for="firmanteActual">Escolaridad:</label>
                        <select class="form-control" id="escolaridadReviso">
                            <option value="">Seleccione una escolaridad</option>
                            <option value="C.">Ciudadano</option>
                            <option value="Lic.">Licenciatura</option>
                            <option value="Ing.">Ingeniería</option>
                            <option value="C.P.">Contaduría</option>
                            <option value="Arq.">Arquitectura</option>
                            <option value="Act.">Actuaría</option>
                            <option value="Mtro.">Maestro</option>
                            <option value="Mtra.">Maestra</option>
                            <option value="Dr.">Doctor</option>
                            <option value="Dra.">Doctora</option>
                        </select>
                        <div class="col-sm-12" id="error_escolaridadReviso">
                            <small id="dateHelp" class="text-danger">
                                Por favor seleccione el firmante que revisa.
                            </small>
                        </div>
                    </div>
                    <div class="form-row col-md-4" id="divFirmante">
                        <label for="firmanteActual">Firmante:</label>
                        <select class="form-control" id="firmanteReviso">
                            <option value="">Seleccione un servidor público</option>
                            @foreach (var us in Model.Usuarios)
                            {
                                <option value="@us.Id">@us.NombreEmp @us.PaternoEmp @us.MaternoEmp</option>
                            }
                        </select>
                        <div class="col-sm-12" id="error_firmanteReviso">
                            <small id="dateHelp" class="text-danger">
                                Por favor seleccione la escolaridad del firmante que revisa.
                            </small>
                        </div>
                    </div>
                </div>
                <div class="row mt-3">
                    <div class="row col-lg-12 font-weight-bold">
                        <h4>Supervisó: </h4>
                        <br />
                    </div>
                    <div class="form-row col-md-4" id="divEscolaridadA">
                        <label for="firmanteActual">Inmueble:</label>
                        <select class="form-control inmuebleSuperviso" disabled>
                            <option value="">Seleccione un Inmueble</option>
                            @foreach (var inm in Model.InmueblesFirmantes)
                            {
                                <option value="@inm.Id">@inm.Nombre</option>
                            }
                        </select>
                    </div>
                    <div class="form-row col-md-3" id="divEscolaridadN">
                        <label for="firmanteActual">Escolaridad:</label>
                        <select class="form-control" id="escolaridadSuperviso">
                            <option value="">Seleccione una escolaridad</option>
                            <option value="C.">Ciudadano</option>
                            <option value="Lic.">Licenciatura</option>
                            <option value="Ing.">Ingeniería</option>
                            <option value="C.P.">Contaduría</option>
                            <option value="Arq.">Arquitectura</option>
                            <option value="Act.">Actuaría</option>
                            <option value="Mtro.">Maestro</option>
                            <option value="Mtra.">Maestra</option>
                            <option value="Dr.">Doctor</option>
                            <option value="Dra.">Doctora</option>
                        </select>
                        <div class="col-sm-12" id="error_escolaridadSuperviso">
                            <small id="dateHelp" class="text-danger">
                                Por favor seleccione la escolaridad del firmante que supervisa.
                            </small>
                        </div>
                    </div>
                    <div class="form-row col-md-4" id="divFirmante">
                        <div class="select2-purple col-lg-12">
                            <label for="firmanteActual">Firmante:</label>
                            <select class="form-control select2bs4" data-dropdown-css-class="select2-purple" id="firmanteSuperviso">
                                <option value="">Seleccione un servidor público</option>
                                @foreach (var us in Model.Usuarios)
                                {
                                    <option value="@us.Id">@us.NombreEmp @us.PaternoEmp @us.MaternoEmp</option>
                                }
                            </select>
                        </div>
                        <div class="col-sm-12" id="error_firmanteSuperviso">
                            <small id="dateHelp" class="text-danger">
                                Por favor seleccione el firmante que supervisa.
                            </small>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer justify-content-end">
                <button type="button" class="btn btn-primary" id="actualizarFirmante">Guardar Firmantes</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
@*Fin del Modal para Capturar Oficios*@


@section Scripts{
    <script>
        $(function () {
            $('#error_filePDF').css('display', 'none');
            $('#error_fileXML').css('display', 'none');
            $('#error_TipoDocumentacion').css('display', 'none');
            $('#error_entregablePDF').css('display', 'none');

            $("#error_escolaridadReviso").css("display", "none");
            $("#error_firmanteReviso").css("display", "none");
            $("#error_escolaridadSuperviso").css("display", "none");
            $("#error_firmanteSuperviso").css("display", "none");

            $('[data-toggle="tooltip"]').tooltip();
            $(".conceptosFactura").css("display", "none");

            $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
                var target = $(e.target).attr("href") // activated tab
                localStorage.setItem('activeTab', target);
            });

            $(".select2").select2();

            $('.select2bs4').select2({
                theme: 'bootstrap4'
            });

            localStorage.getItem('activeTab')

            if (localStorage.getItem('activeTab')) {
                var idTab = localStorage.getItem('activeTab').replace("#", "");
                $('#myTab li:first').removeClass('active');
                $('a[href="' + localStorage.getItem('activeTab') + '"]').addClass('active');
                $('#myTab li:first').removeClass("show active");
                $("#" + idTab).addClass("show active");
            }

            //Validaciones
            function validaCamposArchivo() {
                var fileXML = $('#fileXML').val().split("\\").pop();
                var extXML = fileXML.split('.').pop();
                var filePDF = $('#filePDF').val().split("\\").pop();
                var extPDF = filePDF.split('.').pop();

                if ($('#TipoDocumentacion').val() == "" && $('#fileXML').val() == "" && $('#filePDF').val() == "") {
                    $('#TipoDocumentacion').addClass('is-invalid');
                    $('#error_TipoDocumentacion').css('display', 'block');
                    $('#fileXML').addClass('is-invalid');
                    $('#error_fileXML').css('display', 'block');
                    $('#filePDF').addClass('is-invalid');
                    $('#error_filePDF').css('display', 'block');
                    return false;
                }

                if ($('#TipoDocumentacion').val() == "") {
                    $('#TipoDocumentacion').addClass('is-invalid');
                    $('#error_tipoEntre').css('display', 'block');
                    return false;
                }

                if (extXML != "xml" && extXML != "XML") {
                    $('#fileXML').addClass('is-invalid');
                    $('#error_fileXML').css('display', 'block');
                    return false;
                }

                if (extPDF != "pdf" && extPDF != "PDF") {
                    $('#filePDF').addClass('is-invalid');
                    $('#error_filePDF').css('display', 'block');
                    return false;
                }
                return true;
            }

            $('#TipoDocumentacion').change(function () {
                if ($('#TipoDocumentacion').val() == "") {
                    $('#TipoDocumentacion').addClass('is-invalid');
                    $('#error_TipoDocumentacion').css('display', 'block');
                    return false;
                } else {
                    $('#TipoDocumentacion').removeClass('is-invalid');
                    $('#TipoDocumentacion').addClass('is-valid');
                    $('#error_TipoDocumentacion').css('display', 'none');
                }
            });

            $("#filePDF").change(function (e) {
                var fileName = $(this).val().split("\\").pop();
                var ext = fileName.split('.').pop();
                if (ext == "pdf" || ext == "PDF") {
                    $('#filePDF').removeClass('is-invalid');
                    $('#filePDF').addClass('is-valid');
                    $('#error_filePDF').css('display', 'none');
                    $(this).siblings(".custom-pdf").addClass("selected").html(fileName);
                } else {
                    $('#filePDF').removeClass('is-valid');
                    $('#filePDF').addClass('is-invalid');
                    $('#error_filePDF').css('display', 'block');
                    Swal.fire({
                        icon: 'error',
                        title: 'Servicio de '+servicio.descripcion,
                        'text': 'El archivo que intenta adjuntar no es válido. Favor de solo seleccionar archivos "PDF"'
                    });
                    $(".custom-pdf").text("Seleccionar Archivo");
                    document.getElementById('filePDF').value = '';
                }
            });

            $("#fileXML").change(function (e) {
                var fileName = $(this).val().split("\\").pop();
                var ext = fileName.split('.').pop();
                if (ext == "xml" || ext == "XML") {
                    $('#fileXML').removeClass('is-invalid');
                    $('#fileXML').addClass('is-valid');
                    $('#error_fileXML').css('display', 'none');
                    $(this).siblings(".custom-file-label").addClass("selected").html(fileName);
                } else {
                    $('#fileXML').removeClass('is-valid');
                    $('#fileXML').addClass('is-invalid');
                    $('#error_fileXML').css('display', 'block');
                    Swal.fire({
                        icon: 'error',
                        title: 'Servicio de '+servicio.descripcion,
                        'text': 'El archivo que intenta adjuntar no es válido. Favor de solo seleccionar archivos "XML"'
                    });
                    $(".custom-file-label").text("Seleccionar Archivo");
                    document.getElementById('fileXML').value = '';
                }
            });

            $("#adjuntarArchivo").click(function () {
                if (validaCamposArchivo()) {
                    var formData = new FormData();
                    var fileXML = document.getElementById('fileXML').files[0];
                    var filePDF = document.getElementById('filePDF').files[0];

                    formData.append("FacturacionId", @Model.Repositorio.Id);
                    formData.append("MesId", @Model.Cedula.MesId);
                    formData.append("InmuebleId", @Model.Inmueble.Id);
                    formData.append("Tipo", $("#TipoDocumentacion").val());
                    formData.append("XML", fileXML);
                    formData.append("PDF", filePDF);
                    Swal.fire({
                        allowOutsideClick: false,
                        icon: "info",
                        title: 'Servicio de '+servicio.descripcion,
                        html: "Obtiendo el listado de inmuebles del año <b>" + $("#anioActual").val() + "</b>.",
                        confirmButtonText: 'Cerrar'
                    })
                    Swal.showLoading();

                    axios.post('/fumigacion/' + @Model.Modulo.Id+'/' + @Model.Submodulo.Id+'/facturacion/detalle/' + @Model.Inmueble.Id+'/' + @Model.Repositorio.Id+'/' + @Model.Cedula.Id+'?handler=Factura', formData, { headers: { 'Content-Type': 'multipart/form-data' } }).then(response => {
                        if (response.status == 200) {
                            Swal.fire({
                                icon: "success",
                                title: 'Servicio de '+servicio.descripcion,
                                'text': 'Se adjuntó la documentación correctamente.',
                                confirmButtonText: 'Cerrar'
                            }).then(function () {
                                window.location.reload();
                            });
                        }
                    });
                }
            });

            $(".btnXML").click(function () {
                $("#modalXML").modal('show');
            });

            $(".cabeceraInformacionG").click(function () {
                $header = $(this);
                $content = $header.next();
                $content.slideToggle(500, function () {
                });
            });

            $(".cabeceraInformacion").click(function () {
                $header = $(this);
                $content = $header.next();
                $content.slideToggle(500, function () {
                });
            });

            $(".cabeceraContrato").click(function () {
                $header = $(this);
                $content = $header.next();
                $content.slideToggle(500, function () {
                });
            });

            $(".cabeceraInmueble").click(function () {
                $header = $(this);
                $content = $header.next();
                $content.slideToggle(500, function () {
                });
            });

            $(".cabeceraFacturacion").click(function () {
                $header = $(this);
                $content = $header.next();
                $content.slideToggle(500, function () {
                });
            });

            $(".cabeceraCedula").click(function () {
                $header = $(this);
                $content = $header.next();
                $content.slideToggle(500, function () {
                });
            });

            $(".cabeceraEntregables").click(function () {
                $header = $(this);
                $content = $header.next();
                $content.slideToggle(500, function () {
                });
            });

            $(".cabeceraPenalizaciones").click(function () {
                $header = $(this);
                $content = $header.next();
                $content.slideToggle(500, function () {
                });
            });

            $(".cabeceraGuiasNE").click(function () {
                $header = $(this);
                $content = $header.next();
                $content.slideToggle(500, function () {
                });
            });

            $(".cabeceraSegCedula").click(function () {
                $header = $(this);
                $content = $header.next();
                $content.slideToggle(500, function () {
                });
            });

            $(".cabeceraSegEntregables").click(function () {
                $header = $(this);
                $content = $header.next();
                $content.slideToggle(500, function () {
                });
            });

            $('.viewConceptosF').click(function () {
                let factura = $(this).data('factura');
                if ($("#conceptoFactura_" + factura).css('display') == 'none') {
                    $("#conceptoFactura_" + factura).css("display", "block");
                }
                else {
                    $("#conceptoFactura_" + factura).css("display", "none");
                }
            });

            $(".viewConceptosF").click(function () {
                if ($("#viewConceptos_" + $(this).data('factura') + " > i").hasClass("text-success")) {
                    $("#viewConceptos_" + $(this).data('factura') + " > i").removeClass("text-success");
                    $("#viewConceptos_" + $(this).data('factura') + "> i").addClass("text-danger");
                } else {
                    $("#viewConceptos_" + $(this).data('factura') + " > i").removeClass("text-danger");
                    $("#viewConceptos_" + $(this).data('factura') + " > i").addClass("text-success");
                }
            });

            /*********************************** Apartado de Evaluación **********************************/

            const modulo = @Html.Raw(Json.Serialize(@Model.Modulo));
            const servicio = @Html.Raw(Json.Serialize(@Model.Servicio));
            const supervision = @Html.Raw(Json.Serialize(@Model.Supervision));
            const submodulo = @Html.Raw(Json.Serialize(@Model.Submodulo));
            const inmueble = @Html.Raw(Json.Serialize(@Model.Inmueble));
            const respuestas = @Html.Raw(Json.Serialize(@Model.Cedula.respuestas));
            const preguntasDeductiva = @Html.Raw(Json.Serialize(@pDeductivas));
            const penasDeductivas = @Html.Raw(Json.Serialize(@Model.Cedula.respuestas.Where(r => pDeductivas.Contains(r.Pregunta)).Sum(m => m.MontoPenalizacion)));
            const facturacion = @Html.Raw(Json.Serialize(@Model.Repositorio));
            const facturas = @Html.Raw(Json.Serialize(@Model.Facturas));
            const existsNC = @Html.Raw(Json.Serialize(@Model.Facturas.Where(f => f.Tipo.Equals("NC")).Count()));
            const repositorio = @Html.Raw(Json.Serialize(@Model.Repositorio.Id));
            const cedula = @Html.Raw(Json.Serialize(@Model.Cedula));
            const configuracion = @Html.Raw(Json.Serialize(@Model.ConfiguracionIncidencias));
            const entregables = @Html.Raw(Json.Serialize(@Model.Cedula.entregables));
            const rechazarTramite = @Html.Raw(Json.Serialize(@Model.Cedula.entregables.Where(e=> e.estatus.Nombre.Equals("Rechazado")).Count()));
            const usuario = @Html.Raw(Json.Serialize(User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier).Value));

            console.log(respuestas);

            if (rechazarTramite == 0)
            {
                $(".tramiteRechazado").remove();
            }
            else
            {
                $(".autorizarCAE").remove();
            }

            $(".tblIncidencias").DataTable({
                responsive: true,
                language: {
                    url: "https://cdn.datatables.net/plug-ins/1.10.19/i18n/Spanish.json"
                },
            });

            $(".tblLogCedula").DataTable({
                responsive: true,
                language: {
                    url: "https://cdn.datatables.net/plug-ins/1.10.19/i18n/Spanish.json"
                },
            });

            $(".tblLogEntregables").DataTable({
                responsive: true,
                language: {
                    url: "https://cdn.datatables.net/plug-ins/1.10.19/i18n/Spanish.json"
                },
            });

            $("#tblGuias").DataTable({
                responsive: true,
                language: {
                    url: "https://cdn.datatables.net/plug-ins/1.10.19/i18n/Spanish.json"
                },
            });

            for (var i = 0; i < respuestas.length; i++) {
                if (respuestas[i].cuestionario.abreviacion == "Inasistencias" && respuestas[i].iFumigacion.length != 0)
                {
                    $('input:radio[name="' + respuestas[i].cuestionario.abreviacion + '"][value="true"]').prop('checked', true);
                }
                else
                {
                    $('input:radio[name="' + respuestas[i].cuestionario.abreviacion + '"][value="' + respuestas[i].respuesta + '"]').prop('checked', true);
                }
            }

            if (cedula.estatus.nombre == "Revisión CAE" || cedula.estatus.nombre == "Autorizado CAE" || cedula.estatus.nombre == "En Trámite"
                || cedula.estatus.nombre == "Trámite de Pago" || cedula.estatus.nombre == "Trámite Rechazado") {
                $(".cuerpoCedula").css("display", "none");
                $(".cuerpoEntregables").css("display", "block");
            }
            else if (cedula.estatus.nombre == "Sin Iniciar" || cedula.estatus.nombre == "En Proceso" || cedula.estatus.nombre == "Rechazada") {
                $(".cuerpoCedula").css("display", "block");
                $(".cuerpoEntregables").css("display", "block");
            }
            else if (cedula.estatus.nombre == "Autorizada") {
                $(".cuerpoCedula").css("display", "block");
                $(".cuerpoEntregables").css("display", "block");
                $(".cuerpoPenalizaciones").css("display", "block");
            }


            /*********************************** Apartado de Evaluación **********************************/

            /*********************************** Apartado de Incidencias **********************************/
            $(".addIncidencia").click(function () {
                limpiaCampos();
                if ($(this).data('respuesta') == null || $(this).data('respuesta') == "") {
                    Swal.fire({
                        icon: 'error',
                        title: 'Servicio de ' + servicio.descripcion,
                        html: 'Por favor seleccione una respuesta antes de capturar incidencias u observaciones.'
                    });
                }
                else
                {
                    $(".titleAddI").text("Registrar Incidencia - "+$(this).data("titulo"));
                    ocultaCamposIncidencia();
                    muestraCamposIncidencia($(this).data("preguntaid"), $(this).data("abreviacion"));
                    $(".btnAyudaI").attr('data-ayuda', $(this).data('ayuda'));
                    $("#campoPregunta").val($(this).data("pregunta"));
                    $("#campoPreguntaId").val($(this).data("preguntaid"));
                    $("#campoIncidencia").val($(this).data("abreviacion"));
                    $("#campoIncidenciaId").val($(this).data("incidenciaid"));
                    llenaTiposIncidencia($(this).data("incidenciaid"));
                    llenaActividadesPO($(this).data("incidenciaid"));
                    $("#modal-incidencias").modal("show");
                }
            });

            $("#campoTipoFauna").change(function () {
                axios.get('/fumigacion/' + @Model.Modulo.Id+'/' + @Model.Submodulo.Id+'/facturacion/detalle/' + @Model.Inmueble.Id+'/' + @Model.Repositorio.Id+'/' + @Model.Cedula.Id+'?tipo=' + $(this).val() + '&handler=NombresByTipo').then(response => {
                    if (response.status == 200)
                    {
                        var options = '<option value="0">Seleccione una opción</option>';
                        for (var i = 0; i < response.data.length; i++) {
                            options += '<option value="' + response.data[i].id + '">' + response.data[i].nombre + '</option>'
                        }
                        $("#campoFauna").html(options);
                    }
                });
            });

            function llenaTiposIncidencia(incidencia) {
                axios.get('/fumigacion/' + @Model.Modulo.Id+'/' + @Model.Submodulo.Id+'/facturacion/detalle/' + @Model.Inmueble.Id+'/' + @Model.Repositorio.Id+'/' + @Model.Cedula.Id+'?incidencia=' + incidencia + '&handler=TiposByIncidencia').then(response => {
                    if (response.status == 200)
                    {
                        var options = '<option value="0">Seleccione una opción</option>';
                        for (var i = 0; i < response.data.length; i++) {
                            options += '<option value="' + response.data[i] + '">' + response.data[i] + '</option>'
                        }
                        $("#campoTipoFauna").html(options);
                    }
                });
            }

            function llenaActividadesPO(incidencia) {
                axios.get('/fumigacion/' + @Model.Modulo.Id+'/' + @Model.Submodulo.Id+'/facturacion/detalle/' + @Model.Inmueble.Id+'/' + @Model.Repositorio.Id+'/' + @Model.Cedula.Id+'?incidencia=' + incidencia + '&handler=TiposPO').then(response => {
                    if (response.status == 200)
                    {
                        var servicios = response.data;
                        var options = '<option value="0">Seleccione una opción</option>';
                        for (var i = 0; i < servicios.length; i++) {
                            options += '<option value="' + servicios[i].id + '">' + servicios[i].nombre + '</option>'
                        }
                        $("#campoActividadPO").html(options);
                    }
                });
            }

            function limpiaCampos()
            {
                $("#campoIdIncidencia").val("");
                $("#campoIncidenciaId").val("");
                $("#campoPregunta").val("");
                $("#campoPreguntaId").val("");
                $("#campoFechaIncidencia").val("");
                $("#campoInasistencias").val("");
                $("#campoMesSua").val("");
                $("#campoObservaciones").val("");
            }

            function ocultaCamposIncidencia() {
                $("#divFechaProgramada").css("display", "none");
                $("#divFechaRealizada").css("display", "none");
                $("#divHoraRealizada").css("display", "none");
                $("#divHoraProgramada").css("display", "none");
                $("#divFechaReaparicion").css("display", "none");
                $("#divCampoTipoFauna").css("display", "none");
                $("#divCampoPO").css("display", "none");
                $("#divSuaMes").css("display", "none");
                $("#divObservaciones").css("display", "none");
                $("#error_campoObservaciones").css("display", "none");
                $("#error_campoFechaProgramada").css("display", "none");
                $("#error_campoFechaRealizada").css("display", "none");
                $("#error_campoFechaReaparicion").css("display", "none");
                $("#error_campoActividadPO").css("display", "none");
                $("#error_campoTipoFauna").css("display", "none");
                $("#error_campoFauna").css("display", "none");
                $("#error_campoHoraProgramada").css("display", "none");
                $("#error_campoHoraRealizada").css("display", "none");
                $("#error_campoSuaMes").css("display", "none");
            }

            function muestraCamposIncidencia(pregunta, abreviacion) {
                for (var i = 0; i < configuracion.length; i++) {
                    let respuesta = $("input[name='" + abreviacion + "']:checked").val();
                    if (configuracion[i].pregunta == pregunta && configuracion[i].respuesta + "" == respuesta) {
                        if (configuracion[i].fechaProgramada) {
                            $("#divFechaProgramada").css("display", "block");
                            if (abreviacion == "SUA") {
                                $("#divFechaProgramada > label").text("Fecha de entrega");
                            }
                            else if (abreviacion == "FechaCierre") {
                                $("#divFechaProgramada > label").text("Fecha de cierre");
                            }
                            else if (abreviacion == "ActividadesPO") {
                                $("#divFechaProgramada > label").text("Fecha de la incidencia");
                            }
                            else if (abreviacion == "Uniforme") {
                                $("#divFechaProgramada > label").text("Fecha de la incidencia");
                            }
                        }

                        if (configuracion[i].fechaRealizada) {
                            $("#divFechaRealizada").css("display", "block");
                            if (abreviacion == "EfectividadFumigacion") {
                                $("#divFechaRealizada> label").text("Fecha de fumigación");
                            }
                        }

                        if (configuracion[i].detalles) {
                            $("#divCampoPO").css("display", "block");
                        }

                        if (configuracion[i].fechaReaparicion) {
                            $("#divFechaReaparicion").css("display", "block");
                        }

                        if (configuracion[i].horaProgramada) {
                            $("#divHoraProgramada").css("display", "block");
                        }

                        if (configuracion[i].horaRealizada) {
                            $("#divHoraRealizada").css("display", "block");
                        }

                        if (configuracion[i].faunaNociva) {
                            $("#divCampoTipoFauna").css("display", "block");
                        }

                        if (configuracion[i].mesSua) {
                            $("#divSuaMes").css("display", "block");
                        }

                        if (configuracion[i].observaciones) {
                            $("#divObservaciones").css("display", "block");
                        }

                        return;
                    }
                }
            }

            $(document).on("click",".editIncidencia",function () {
                limpiaCampos();
                ocultaCamposIncidencia();
                editarIncidencia($(this).data("pregunta"), $(this).data("incidencia"), $(this).data("abreviacion"));
                $(".titleAddI").text("Editar Incidencia - " + $(this).data("titulo"));
                $("#campoIdIncidencia").val($(this).data("incidencia"));
                $("#campoIncidenciaId").val($(this).data("incidenciaid"));
                $("#campoPregunta").val($(this).data("pregunta"));
                $("#campoPreguntaId").val($(this).data("preguntaid"));
                $("#modal-incidencias").modal("show");
            });

            function editarIncidencia(pregunta, id, abreviacion) {
                for (var i = 0; i < respuestas[pregunta - 1].iFumigacion.length; i++) {
                    let respuesta = $("input[name='" + abreviacion + "']:checked").val();
                    if (respuestas[pregunta - 1].iFumigacion[i].id == id && respuestas[pregunta - 1].respuesta + "" == respuesta) {
                        if (respuestas[pregunta - 1].iFumigacion[i].ciFumigacion.fechaProgramada) {
                            $("#campoFechaProgramada").val(respuestas[pregunta - 1].iFumigacion[i].fechaProgramada.slice(0, 10));
                            $("#divFechaProgramada").css("display", "block");
                            if (respuestas[pregunta - 1].iFumigacion[i].pregunta == 1) {
                                $("#divFechaIncidencia > label").text("Fecha de cierre");
                            }
                        }

                        if (respuestas[pregunta - 1].iFumigacion[i].ciFumigacion.faunaNociva) {
                            console.log(respuestas[pregunta - 1].iFumigacion[i]);
                            var tipoFauna = respuestas[pregunta - 1].iFumigacion[i].dIncidencia.tipo;
                            var faunaId = respuestas[pregunta - 1].iFumigacion[i].dIncidencia.id;
                            axios.get('/fumigacion/' + @Model.Modulo.Id+'/' + @Model.Submodulo.Id+'/facturacion/detalle/' + @Model.Inmueble.Id+'/' + @Model.Repositorio.Id+'/' + @Model.Cedula.Id+'?incidencia=' + respuestas[pregunta - 1].iFumigacion[i].dIncidencia.incidenciaId + '&handler=TiposByIncidencia').then(response => {
                                if (response.status == 200)
                                {
                                    var options = '<option value="0">Seleccione una opción</option>';
                                    for (var i = 0; i < response.data.length; i++) {
                                        options += '<option value="' + response.data[i] + '">' + response.data[i] + '</option>'
                                    }
                                    $("#campoTipoFauna").html(options);
                                    $("#campoTipoFauna").val(tipoFauna).change();
                                    axios.get('/fumigacion/' + @Model.Modulo.Id+'/' + @Model.Submodulo.Id+'/facturacion/detalle/' + @Model.Inmueble.Id+'/' + @Model.Repositorio.Id+'/' + @Model.Cedula.Id+'?tipo=' + tipoFauna + '&handler=NombresByTipo').then(response => {
                                        if (response.status == 200)
                                        {
                                            var options = '<option value="0">Seleccione una opción</option>';
                                            for (var i = 0; i < response.data.length; i++) {
                                                options += '<option value="' + response.data[i].id + '">' + response.data[i].nombre + '</option>'
                                            }
                                            $("#campoFauna").html(options);
                                            $("#campoFauna").val(faunaId);
                                        }
                                    });
                                }
                            });
                            $("#divCampoTipoFauna").css("display", "block");
                        }

                        if (respuestas[pregunta - 1].iFumigacion[i].ciFumigacion.detalles) {
                            console.log(respuestas[pregunta - 1].iFumigacion[i]);
                            var actividadPOId = respuestas[pregunta - 1].iFumigacion[i].dIncidenciaId;
                            var DincidenciaId = respuestas[pregunta - 1].iFumigacion[i].incidencia.id;
                            axios.get('/fumigacion/' + @Model.Modulo.Id+'/' + @Model.Submodulo.Id+'/facturacion/detalle/' + @Model.Inmueble.Id+'/' + @Model.Repositorio.Id+'/' + @Model.Cedula.Id+'?incidencia=' + DincidenciaId + '&handler=TiposPO').then(response => {
                                if (response.status == 200)
                                {
                                    var options = '<option value="0">Seleccione una opción</option>';
                                    var servicios = response.data;
                                    for (var i = 0; i < servicios.length; i++) {
                                        options += '<option value="' + servicios[i].id + '">' + servicios[i].nombre + '</option>'
                                    }
                                    $("#campoActividadPO").html(options);
                                    $("#campoActividadPO").val(actividadPOId);
                                }
                            });
                            $("#divCampoPO").css("display", "block");
                        }

                        if (respuestas[pregunta - 1].iFumigacion[i].ciFumigacion.fechaRealizada) {
                            $("#campoFechaRealizada").val(respuestas[pregunta - 1].iFumigacion[i].fechaRealizada.slice(0, 10));
                            $("#divFechaRealizada").css("display", "block");
                        }

                        if (respuestas[pregunta - 1].iFumigacion[i].ciFumigacion.fechaReaparicion) {
                            $("#campoFechaReaparicion").val(respuestas[pregunta - 1].iFumigacion[i].fechaReaparicion.slice(0, 10));
                            $("#divFechaReaparicion").css("display", "block");
                        }

                        if (respuestas[pregunta - 1].iFumigacion[i].ciFumigacion.horaProgramada) {
                            $("#campoHoraProgramada").val(respuestas[pregunta - 1].iFumigacion[i].horaProgramada.slice(0, 8));
                            $("#divHoraProgramada").css("display", "block");
                        }

                        if (respuestas[pregunta - 1].iFumigacion[i].ciFumigacion.horaRealizada) {
                            $("#campoHoraRealizada").val(respuestas[pregunta - 1].iFumigacion[i].horaRealizada.slice(0, 8));
                            $("#divHoraRealizada").css("display", "block");
                        }

                        if (respuestas[pregunta - 1].iFumigacion[i].ciFumigacion.mesSua) {
                            $("#campoSuaMes").val(respuestas[pregunta - 1].iFumigacion[i].mesId);
                            $("#divFechaProgramada> label").text("Fecha de entrega");
                            $("#divSuaMes").css("display", "block");
                        }

                        if (respuestas[pregunta - 1].iFumigacion[i].ciFumigacion.observaciones) {
                            $("#campoObservaciones").val(respuestas[pregunta - 1].iFumigacion[i].observaciones);
                            $("#divObservaciones").css("display", "block");
                        }

                        return;
                    }
                }
            }

            function validaCamposByPregunta(pregunta) {
                var denegate = false;
                for (var i = 0; i < configuracion.length; i++) {
                    if (configuracion[i].pregunta == pregunta && configuracion[i].obligatorio) {
                        if (configuracion[i].fechaProgramada && configuracion[i].fechaRealizada) {
                            if ($("#campoFechaProgramada").val() == "" || $("#campoFechaProgramada").val() == null) {
                                denegate = true;
                                $("#error_campoFechaProgramada").css("display", "block");
                                Swal.fire({
                                    'icon': 'error',
                                    title: 'Servicio de ' + servicio.descripcion,
                                    'html': "No ha capturado la <b>Fecha Programada</b>."
                                }).then(function () {
                                    return false;
                                });
                            }

                            if ($("#campoFechaRealizada").val() == "" || $("#campoFechaRealizada").val() == null) {
                                denegate = true;
                                $("#error_campoFechaRealizada").css("display", "block");
                                Swal.fire({
                                    'icon': 'error',
                                    title: 'Servicio de ' + servicio.descripcion,
                                    'html': "No ha capturado la <b>Fecha Realizada</b>."
                                }).then(function () {
                                    return false;
                                });
                            }

                            if ($("#campoFechaProgramada").val() >= $("#campoFechaRealizada").val()) {
                                denegate = true;
                                $("#error_campoFechaProgramada").css("display", "block");
                                $("#error_campoFechaRealizada").css("display", "block");
                                Swal.fire({
                                    'icon': 'error',
                                    title: 'Servicio de ' + servicio.descripcion,
                                    'html': "La <b>Fecha Programada</b> no puede ser mayor o igual a la <b>Fecha Realizada</b>."
                                }).then(function () {
                                    return false;
                                });
                            }
                        }

                        if (configuracion[i].fechaRealizada && configuracion[i].fechaReaparicion) {
                            if ($("#campoFechaRealizada").val() == "" || $("#campoFechaReaparicion").val() == null) {
                                denegate = true;
                                $("#error_campoFechaRealizada").css("display", "block");
                                Swal.fire({
                                    'icon': 'error',
                                    title: 'Servicio de ' + servicio.descripcion,
                                    'html': "No ha capturado la <b>Fecha Realizada</b>."
                                }).then(function () {
                                    return false;
                                });
                            }

                            if ($("#campoFechaReaparicion").val() == "" || $("#campoFechaReaparicion").val() == null) {
                                denegate = true;
                                $("#error_campoFechaReaparicion").css("display", "block");
                                Swal.fire({
                                    'icon': 'error',
                                    title: 'Servicio de ' + servicio.descripcion,
                                    'html': "No ha capturado la <b>Fecha Reaparición</b>."
                                }).then(function () {
                                    return false;
                                });
                            }

                            if ($("#campoFechaRealizada").val() >= $("#campoFechaReaparicion").val()) {
                                denegate = true;
                                $("#error_campoFechaReaparicion").css("display", "block");
                                $("#error_campoFechaRealizada").css("display", "block");
                                Swal.fire({
                                    'icon': 'error',
                                    title: 'Servicio de ' + servicio.descripcion,
                                    'html': "La <b>Fecha Realizada</b> no puede ser mayor o igual a la <b>Fecha de Reaparición</b>."
                                }).then(function () {
                                    return false;
                                });
                            }
                        }

                        if (configuracion[i].faunaNociva) {
                            if ($("#campoTipoFauna").val() == "") {
                                denegate = true;
                                $('#campoTipoFauna').addClass('is-invalid');
                                $("#error_campoTipoFauna").css("display", "block");
                                Swal.fire({
                                    'icon': 'error',
                                    title: 'Servicio de ' + servicio.descripcion,
                                    'html': "No ha seleccionado el <b>Tipo de Fauna</b>."
                                }).then(function () {
                                    return false;
                                });
                            }

                            if ($("#campoFauna").val() == "") {
                                denegate = true;
                                $('#campoFauna').addClass('is-invalid');
                                $("#error_campoFauna").css("display", "block");
                                Swal.fire({
                                    'icon': 'error',
                                    title: 'Servicio de ' + servicio.descripcion,
                                    'html': "No ha seleccionado la fauna <b></b>."
                                }).then(function () {
                                    return false;
                                });
                            }
                        }

                        if (configuracion[i].mesSua) {
                            if ($("#campoSuaMes").val() == "" || $("#campoSuaMes").val() == 0) {
                                denegate = true;
                                $('#campoSuaMes').addClass('is-invalid');
                                $("#error_campoSuaMes").css("display", "block");
                                Swal.fire({
                                    'icon': 'error',
                                    title: 'Servicio de ' + servicio.descripcion,
                                    'html': "No ha seleccionado el <b>Mes Correspondiente</b> del SUA."
                                }).then(function () {
                                    return false;
                                });
                            }
                        }

                        if (configuracion[i].observaciones) {
                            if ($("#campoObservaciones").val() == "") {
                                denegate = true;
                                $("#error_observaciones").css("display", "block");
                                Swal.fire({
                                    'icon': 'error',
                                    title: 'Servicio de ' + servicio.descripcion,
                                    'html': "No se han capturado las <b>Observaciones</b>."
                                }).then(function () {
                                    return false;
                                });
                            }
                        }
                    }
                }

                if (denegate == false) {
                    return true;
                }
            }

            $("#guardaIncidencia").click(function () {
                var formData = new FormData();

                var idIncidencia = $("#campoIdIncidencia").val() != "" ? $("#campoIdIncidencia").val():0;
                var incidenciaId = $("#campoIncidenciaId").val();
                var pregunta = $("#campoPregunta").val();
                var preguntaId = $("#campoPreguntaId").val();
                var fechaProgramada = $("#campoFechaProgramada").val() != null && $("#campoFechaProgramada").val() != "" ? $("#campoFechaProgramada").val() : "1990-01-01";
                var fechaRealizada = $("#campoFechaRealizada").val() != null && $("#campoFechaRealizada").val() != "" ? $("#campoFechaRealizada").val() : 0;
                var horaProgramada = $("#campoHoraProgramada").val() != null && $("#campoHoraProgramada").val() != "" ? $("#campoHoraProgramada").val() : "00:00:00";
                var horaRealizada = $("#campoHoraRealizada").val() != null && $("#campoHoraRealizada").val() != "" ? $("#campoHoraRealizada").val() : "00:00:00";
                var fechaReaparicion = $("#campoFechaReaparicion").val() != null && $("#campoFechaReaparicion").val() != "" ? $("#campoFechaReaparicion").val() : 0;
                var tipoFauna = $("#campoFauna").val() != null && $("#campoFauna").val() != "" ? $("#campoFauna").val() : 0;
                var actividadPO = $("#campoActividadPO").val() != null && $("#campoActividadPO").val() != "" ? $("#campoActividadPO").val() : 0;
                var mesId = $("#campoSuaMes").val() != 0 ? $("#campoSuaMes").val() : 0;
                var observaciones = $("#campoObservaciones").val() != null && $("#campoObservaciones").val() != "" ? $("#campoObservaciones").val() : 0;

                formData.append("IncidenciaId", parseInt(incidenciaId));
                formData.append("CedulaEvaluacionId", cedula.id);
                formData.append("UsuarioId", usuario);
                formData.append("Pregunta", pregunta);
                formData.append("FechaProgramada", fechaProgramada);
                formData.append("FechaRealizada", fechaRealizada);
                formData.append("HoraProgramada", horaProgramada);
                formData.append("HoraRealizada", horaRealizada);
                formData.append("FechaReaparicion", fechaReaparicion);
                if (tipoFauna != 0) {
                    formData.append("DIncidenciaId", tipoFauna);
                }
                else
                {
                    formData.append("DIncidenciaId", actividadPO);
                }

                formData.append("MesId", mesId);
                formData.append("Observaciones", observaciones);

                Swal.fire({
                    allowOutsideClick: false,
                    icon: "info",
                    title: "Servicio de "+servicio.descripcion,
                    html: "Guardando la incidencia, espere por favor."
                });
                Swal.showLoading();
                if (validaCamposByPregunta(preguntaId)) {
                    if (idIncidencia != 0) {
                        formData.append("Id", parseInt(idIncidencia));

                        axios.put('/fumigacion/' + @Model.Modulo.Id+'/' + @Model.Submodulo.Id+'/facturacion/detalle/' + @Model.Inmueble.Id+'/' + @Model.Repositorio.Id+'/' + @Model.Cedula.Id+'?handler=ActualizarIncidencia', formData, { headers: { 'Content-Type': 'multipart/form-data' } }).then(response => {
                            if (response.status == 200) {
                                Swal.fire({
                                    icon: "success",
                                    title: 'Servicio de '+servicio.descripcion,
                                    html: "La incidencia se actualizó correctamente.",
                                    confirmButtonText: 'Cerrar'
                                }).then(function () {
                                    $("#modal-incidencias").modal("hide");
                                    Swal.fire({
                                        allowOutsideClick: false,
                                        icon: "info",
                                        title: 'Servicio de '+servicio.descripcion,
                                        html: "Actualizando las incidencias, espere por favor."
                                    });
                                    Swal.showLoading();
                                    window.location.reload();
                                });
                            }
                        }).catch(error => {
                            Swal.fire({
                                icon: "error",
                                title: 'Servicio de '+servicio.descripcion,
                                html: "Hubo un error al actualizar la incidencia. Contacte a su administrador del sistema.",
                                confirmButtonText: 'Cerrar'
                            });
                        });
                    }
                    else {
                        axios.post('/fumigacion/' + @Model.Modulo.Id+'/' + @Model.Submodulo.Id+'/facturacion/detalle/' + @Model.Inmueble.Id+'/' + @Model.Repositorio.Id+'/' + @Model.Cedula.Id+'?handler=CrearIncidencia', formData, { headers: { 'Content-Type': 'multipart/form-data' } }).then(response => {
                            if (response.status == 200) {
                                Swal.fire({
                                    icon: "success",
                                    title: 'Servicio de '+servicio.descripcion,
                                    html: "La incidencia se registró correctamente.",
                                    confirmButtonText: 'Cerrar'
                                }).then(function () {
                                    Swal.fire({
                                        allowOutsideClick: false,
                                        icon: "info",
                                        title: 'Servicio de ' + servicio.descripcion,
                                        html: "Actualizando las incidencias, espere por favor."
                                    });
                                    Swal.showLoading();
                                    window.location.reload();
                                });
                            }
                        }).catch(error => {
                            Swal.fire({
                                icon: "error",
                                title: 'Servicio de '+servicio.descripcion,
                                html: "Hubo un error al insertar la incidencia. Contacte a su administrador del sistema.",
                                confirmButtonText: 'Cerrar'
                            });
                        });
                    }
                }
            });

            $(".eliminarIncidencia").click(function () {
                var formData = new FormData();

                var idIncidencia = $(this).data('id');
                var abreviacion = $(this).data('abreviacion');
                var respuesta= $(this).data('respuesta');

                Swal.fire({
                    icon: 'warning',
                    title: 'Servicio de '+servicio.descripcion,
                    html: '¿Está seguro que desea <b>Eliminar</b> la incidencia de la cédula de evaluación?',
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Si, Eliminar',
                    cancelButtonText: 'Cancelar',
                    showCancelButton: true
                }).then(confirm => {
                    axios.post('/fumigacion/' + @Model.Modulo.Id+'/' + @Model.Submodulo.Id+'/facturacion/detalle/' + @Model.Inmueble.Id+'/' + @Model.Repositorio.Id+'/' + @Model.Cedula.Id+'?handler=EliminarIncidencia', {
                        Id: parseInt(idIncidencia), CedulaEvaluacionId: parseInt(cedula.id), UsuarioId: usuario
                    }).then(response => {
                        if (response.status == 200) {
                            Swal.fire({
                                icon: "success",
                                title: 'Servicio de '+servicio.descripcion,
                                html: "La incidencia se eliminó correctamente.",
                                confirmButtonText: 'Cerrar'
                            }).then(function () {
                                $("#modal-incidencias").modal("hide");
                                if (abreviacion == "Inasistencias") {
                                    $('input:radio[name="' + abreviacion + '"][value="' + (!respuesta + "") + '"]').prop('checked', true);
                                    guardarCedula();
                                } else {
                                    Swal.fire({
                                        allowOutsideClick: false,
                                        icon: "info",
                                        title: 'Servicio de ' + servicio.descripcion,
                                        html: "Actualizando las incidencias, espere por favor."
                                    });
                                    Swal.showLoading();
                                    window.location.reload();
                                }
                            });
                        }
                    }).catch(error => {
                        Swal.fire({
                            icon: "error",
                            title: 'Servicio de '+servicio.descripcion,
                            html: "Hubo un error al eliminar la incidencia. Contacte a su administrador del sistema.",
                            confirmButtonText: 'Cerrar'
                        });
                    });
                });
            });

            $(".pregunta").change(function () {
                var pregunta = $(this).data("pregunta");
                var pusuario = $(this).data("pusuario");
                var abreviacion = $(this).data("abreviacion");
                var respuesta = $("input[name='" + abreviacion + "']:checked").val();
                var obligatorio = $(this).data('obligatorio');

                if (obligatorio == "True" && cuentaIncidencias(cedula.id, pusuario) != 0) {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Servicio de '+servicio.descripcion,
                        html: '<strong>Advertencia:</strong><p>Tiene incidencias capturadas en esta pregunta, al cambiar la respuesta <strong>se eliminarán todas las incidencias. ¿Desea continuar? </strong></p>',
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Si, eliminar',
                        cancelButtonText: 'Cancelar',
                        showCancelButton: true
                    }).then(p => {
                        if (p.isConfirmed) {
                            Swal.fire({
                                icon: 'warning',
                                title: 'Servicio de '+servicio.descripcion,
                                html: 'Escriba la palabra ELIMINAR en para confirmar el cambio de respuesta.',
                                confirmButtonColor: '#3085d6',
                                cancelButtonColor: '#d33',
                                confirmButtonText: 'Si, eliminar todo',
                                cancelButtonText: 'Cancelar',
                                showCancelButton: true,
                                input: 'text',
                                inputPlaceholder: 'Escribe la palabra ELIMINAR'
                            }).then(res => {
                                if (res.value == 'ELIMINAR' || res.value == 'eliminar') {
                                    axios.post('/fumigacion/' + @Model.Modulo.Id+'/' + @Model.Submodulo.Id+'/facturacion/detalle/' + @Model.Inmueble.Id+'/' + @Model.Repositorio.Id+'/' + @Model.Cedula.Id+'?handler=EliminarIncidencias', {
                                        CedulaEvaluacionId: parseInt(cedula.id), Pregunta: parseInt(pusuario)
                                    }).then(response => {
                                        Swal.fire({
                                            allowOutsideClick: false,
                                            icon: "info",
                                            title: 'Servicio de '+servicio.descripcion,
                                            html: "Eliminando las incidencias, espere por favor."
                                        });
                                        Swal.showLoading();
                                        Swal.fire({
                                            icon: "success",
                                            title: 'Servicio de '+servicio.descripcion,
                                            html: 'Se eliminaron las incidencias de la pregunta ' + pusuario + '.',
                                            confirmButtonText: 'Cerrar'
                                        }).then(function () {
                                            guardarCedula();
                                        });
                                    });
                                }
                                else if (dismiss = 'cancel') {
                                    $('input:radio[name="' + abreviacion + '"][value="' + (!respuesta + "") + '"]').prop('checked', true);
                                }
                            });
                        }
                        else {
                            $('input:radio[name="' + abreviacion + '"][value="' + (!respuesta + "") + '"]').prop('checked', true);
                        }
                    });
                }
                else
                {
                    for (var i = 0; i < configuracion.length; i++)
                    {
                        if (configuracion[i].pregunta == pregunta && (respuesta == "true") == configuracion[i].respuesta)
                        {
                            if (respuesta != "N/A") {
                                guardarCedulaCP(configuracion[i].obligatorio, pusuario, respuesta)
                            }
                            else if (respuesta == "N/A") {
                                guardarCedulaCP(configuracion[i].obligatorio, pusuario, respuesta)
                            }

                        }
                    }
                }
            });

            $("#campoFechaIncidencia").change(function () {
                if ($('#campoFechaIncidencia').hasClass('is-invalid')) {
                    $('#campoFechaIncidencia').removeClass('is-invalid');
                    $('#campoFechaIncidencia').addClass('is-valid');
                    $('#error_campoFechaIncidencia').css('display', 'none');
                }
            });

            $("#campoSuaMes").change(function () {
                if ($('#campoSuaMes').hasClass('is-invalid')) {
                    $('#campoSuaMes').removeClass('is-invalid');
                    $('#campoSuaMes').addClass('is-valid');
                    $('#error_campoSuaMes').css('display', 'none');
                }
            });

            $("#campoInasistencias").change(function () {
                if ($('#campoInasistencias').hasClass('is-invalid')) {
                    $('#campoInasistencias').removeClass('is-invalid');
                    $('#campoSuaMes').addClass('is-valid');
                    $('#error_campoInasistencias').css('display', 'none');
                }
            });

            /*********************************** Apartado de Incidencias **********************************/

            /*********************************** Apartado de Entregables **********************************/
            $(".editarEntregable").click(function () {
                $(".tituloEntregable").html('<h4 class="modal-title text-white">Cargar entregable - ' + $(this).data("tipo") + '</h4>');
                if ($(this).data("tipo") == "Factura" || $(this).data("tipo").includes("SAT"))
                {
                    $("#notaEntregable").html('<b>Nota:</b> Recuerde que la <b>Factura, Nota de Crédito, Validación del SAT y Validación del SAT (NC)</b> <b class="text-danger">deben ir firmadas y selladas</b> por la administración del inmueble.');
                }
                $("#campoIdEntregable").val($(this).data("id"));
                $("#campoTipoEntregable").val($(this).data("tipo"));
                $("#campoentregableid").val($(this).data("entregableid"));
                $(".custom-pdf").text($(this).data("file"));
                $("#modalEntregables").modal('show');
            });

            $("#entregablePDF").on("change", function () {
                var fileName = $(this).val().split("\\").pop();
                var ext = fileName.split('.').pop();
                if (ext == "pdf" || ext == "PDF") {
                    $(this).siblings(".custom-file-label").addClass("selected").html(fileName);
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Formato Incorrecto',
                        'text': 'El archivo que intentas adjuntar no es válido. Favor de solo seleccionar archivos "PDF"'
                    });
                    $(".custom-file-label").text("Seleccionar Archivo");
                    document.getElementById('customFile').value = '';
                    if ($('#entregablePDF').hasClass('is-valid')) {
                        $('#entregablePDF').removeClass('is-valid');
                    }
                    $('#entregablePDF').addClass('is-invalid');
                    $('#error_entregablePDF').css('display', 'block');
                }
            });

            $("#guardarEntregable").click(function () {
                var formData = new FormData();
                var filePDF = document.getElementById('entregablePDF').files[0];
                var observaciones = "Se actualizó el entregable: " + $("#campoTipoEntregable").val() + ".";

                formData.append("Id", $("#campoIdEntregable").val());
                formData.append("UsuarioId", usuario);
                formData.append("Estatus", "En Revisión");
                formData.append("Archivo", filePDF);
                formData.append("Anio", parseInt(cedula.anio));
                formData.append("Mes", cedula.mes.nombre);
                formData.append("Folio", cedula.folio);
                formData.append("Archivo", filePDF);
                formData.append("Observaciones", observaciones);
                formData.append("TipoEntregable", $("#campoTipoEntregable").val());

                Swal.fire({
                    allowOutsideClick: false,
                    icon: "info",
                    title: 'Servicio de '+servicio.descripcion,
                    html: "Guardando entregable, espere por favor."
                });
                Swal.showLoading();
                axios.put('/fumigacion/' + @Model.Modulo.Id+'/' + @Model.Submodulo.Id+'/facturacion/detalle/' + @Model.Inmueble.Id+'/' + @Model.Repositorio.Id+'/' + @Model.Cedula.Id+'?handler=ActualizarEntregables', formData, { headers: { 'Content-Type': 'multipart/form-data' } }).then(response => {
                    if (response.status == 200) {
                        Swal.fire({
                            icon: "success",
                            title: 'Servicio de '+servicio.descripcion,
                            html: 'El entregable <b>' + $("#campoTipoEntregable").val() + '</b> se actualizó correctamente.',
                            confirmButtonText: 'Cerrar'
                        }).then(function () {
                            Swal.fire({
                                allowOutsideClick: false,
                                icon: "info",
                                title: 'Servicio de '+servicio.descripcion,
                                html: "Actualizando el listado de entregables, espere por favor."
                            });
                            Swal.showLoading();
                            window.location.reload();
                        });
                    }
                });
            });

            $(".verEntregable").click(function () {
                var folio = cedula.folio;
                var abreviacion = $(this).data("tipo");
                var archivo = $(this).data("archivo");
                var tipoEntregable = $(this).data("tipo");
                var observaciones = $(this).data("observaciones");

                let url = '/fumigacion/' + @Model.Modulo.Id+'/' + @Model.Submodulo.Id+'/facturacion/detalle/' + @Model.Inmueble.Id+'/' + @Model.Repositorio.Id+'/' + @Model.Cedula.Id+'?cAnio=' + @Model.Cedula.Anio+'&cMes=' + cedula.mes.nombre + '&cFolio=' + folio + '&cArchivo=' + archivo + '&tipo=' + tipoEntregable + '&handler=VisualizarEntregable';
                let data = '<object class="vistaPdf" embedded=True data="' + url + '"></object>';
                let detail = '<tr>'+
                                '<td><label>Año: </label> '+cedula.anio+'</td>'+
                                '<td><label>Mes: </label> '+cedula.mes.nombre+'</td>'+
                                '<td><label>Inmueble: </label> '+cedula.inmueble.nombre+'</td>'+
                                '<td><label>Folio: </label> '+cedula.folio+'</td>'+
                                '<td><label>Estatus: </label> ' + cedula.estatus.nombre + '</td>' +
                            '</tr>';
                let detail2 = '<tr>'+
                                '<td colspan="5"><label>Observaciones: </label> ' + observaciones + '</td>'
                            '</tr>';
                $("#titleVerEntregables").text("Vista del entregable - " + abreviacion);
                $('#detalleEntregable').html('<table class="table">' + detail+ detail2 +'</table>');
                $('#objectPdf').html(data);
                $("#modalVerEntregables").modal("show");
            });

            $(".verFactura").click(function () {
                var folio = $(this).data("folio");
                var archivo = $(this).data("archivo");
                var tipo = $(this).data("tipo");
                var subtotal = $(this).data("subtotal");
                var total = $(this).data("total");
                var iva = $(this).data("iva");

                let url = '/fumigacion/' + @Model.Modulo.Id+'/' + @Model.Submodulo.Id+'/facturacion/detalle/' + @Model.Inmueble.Id+'/' + @Model.Repositorio.Id+'/' + @Model.Cedula.Id+'?cAnio=' + @Model.Cedula.Anio+'&cMes=' + cedula.mes.nombre + '&cFolio=' + folio + '&cInmueble=' + inmueble.nombre + '&cArchivo=' + archivo + '&tipo=' + tipo+ '&handler=VisualizarFactura';
                let data = '<object class="vistaPdf" embedded=True data="' + url + '"></object>';
                 let detail = '<tr>'+
                                '<td><label>Año: </label> '+ facturacion.anio+'</td>'+
                                '<td><label>Mes: </label> '+ facturacion.mes.nombre+'</td>'+
                                '<td><label>Inmueble: </label> '+ inmueble.nombre+'</td>'+
                                '<td><label>Folio: </label> '+folio+'</td>'+
                                '<td><label>Tipo: </label> ' + tipo+ '</td>' +
                    '</tr>';

                let detail2 = '<tr>' +
                                '<td  style="text-align: right"><label>Subtotal: </label> '+ formatMoney(parseFloat(subtotal)) +'</td>'+
                                '<td  style="text-align: right"><label>IVA: </label> '+ formatMoney(iva) +'</td>'+
                                '<td  style="text-align: right"><label>Total: </label> '+ formatMoney(total) +'</td>'+
                                '<td></td>'+
                                '<td></td>'+
                            '</tr>';
                $("#titleVerEntregables").text("Vista del entregable - " + tipo);
                $('#detalleEntregable').html('<table class="table">' + detail+ detail2 +'</table>');
                $('#objectPdf').html(data);
                $("#modalVerEntregables").modal("show");
            });

            $(".verActa").click(function () {
                var folio = cedula.folio;
                var archivo = $(this).data("archivo");
                var tipo = $(this).data("tipo");
                var tipoArchivo = $(this).data("tipoarchivo");
                var guia = $(this).data("guia");
                var codigoRastreo = $(this).data("codigo");
                var tipoServicio = $(this).data("tiposervicio");
                var sobrepeso = $(this).data("sobrepeso");

                let url = '/fumigacion/' + @Model.Modulo.Id+'/' + @Model.Submodulo.Id+'/facturacion/detalle/' + @Model.Inmueble.Id+'/' + @Model.Repositorio.Id+'/' + @Model.Cedula.Id+'?cAnio=' + @Model.Cedula.Anio+'&cMes=' + cedula.mes.nombre + '&cFolio=' + folio + '&tipoArchivo=' + tipoArchivo + '&cArchivo=' + archivo + '&tipo=' + tipo+ '&handler=VisualizarActas';
                let data = '<object class="vistaPdf" embedded=True data="' + url + '"></object>';
                let detail = '<tr>'+
                                '<td><label>Año: </label> '+ facturacion.anio+'</td>'+
                                '<td><label>Mes: </label> '+ facturacion.mes.nombre+'</td>'+
                                '<td><label>Folio: </label> '+folio+'</td>'+
                                '<td><label>Tipo de Incidencia: </label> ' + tipo+ '</td>' +
                                '<td><label>Tipo de Archivo: </label> ' + tipoArchivo+ '</td>' +
                    '</tr>';

                let detail2 = '<tr>' +
                                '<td><label>Número de Guía: </label> '+ guia+'</td>'+
                                '<td><label>Código de Rastreo: </label> '+ codigoRastreo +'</td>'+
                                '<td><label>Tipo de Servicio: </label> '+tipoServicio+'</td>'+
                                '<td><label>Sobrepeso: </label> ' + sobrepeso+ '</td>' +
                                '<td></td>' +
                    '</tr>';
                $("#titleVerEntregables").text("Vista del entregable - "+tipoArchivo);
                $('#detalleEntregable').html('<table class="table">' + detail+ detail2 +'</table>');
                $('#objectPdf').html(data);
                $("#modalVerEntregables").modal("show");
            });

            $(".autorizarEntregable").click(function () {
                var formData = new FormData();

                formData.append("Id", $(this).data('id'));
                formData.append("CedulaEvaluacionId", cedula.id);
                formData.append("Estatus", "Autorizado");
                formData.append("EntregableId", $(this).data('entregableid'));
                formData.append("UsuarioId", usuario);

                Swal.fire({
                    icon: 'warning',
                    title: 'Servicio de '+servicio.descripcion,
                    html: '¿Está seguro que desea <b>Autorizar</b> el entregable <b>' + $(this).data('tipo') + '</b>?',
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Si, Autorizar',
                    cancelButtonText: 'Cancelar',
                    showCancelButton: true
                }).then(confirm => {
                    if (confirm.isConfirmed) {
                        formData.append("Observaciones", "El entregable está correcto.");
                        axios.put('/fumigacion/' + @Model.Modulo.Id+'/' + @Model.Submodulo.Id+'/facturacion/detalle/' + @Model.Inmueble.Id+'/' + @Model.Repositorio.Id+'/' + @Model.Cedula.Id+'?handler=AutorizarEntregables', formData, { headers: { 'Content-Type': 'multipart/form-data' } }).then(response => {
                            if (response.status == 200) {
                                Swal.fire({
                                    icon: "success",
                                    title: 'Servicio de '+servicio.descripcion,
                                    html: "El entregable <b>" + $(this).data('tipo') + "</b> se autorizó correctamente.",
                                    confirmButtonText: 'Cerrar'
                                }).then(function () {
                                    Swal.fire({
                                        allowOutsideClick: false,
                                        icon: "info",
                                        title: 'Servicio de '+servicio.descripcion,
                                        html: "Actualizando la cédula de evaluación, espere por favor."
                                    });
                                    Swal.showLoading();
                                    window.location.reload();
                                });
                            }
                        }).catch(error => {
                            Swal.fire({
                                icon: "error",
                                title: 'Servicio de '+servicio.descripcion,
                                html: "Hubo un error al autorizar la cédula de evaluación. Contacte a su administrador del sistema.",
                                confirmButtonText: 'Cerrar'
                            });
                        });
                    }
                });
            });

            $(".rechazarEntregable").click(function () {
                var formData = new FormData();

                formData.append("Id", $(this).data('id'));
                formData.append("CedulaEvaluacionId", cedula.id);
                formData.append("Estatus", "Rechazado");
                formData.append("EntregableId", $(this).data('entregableid'));
                formData.append("UsuarioId", usuario);

                Swal.fire({
                    icon: 'warning',
                    title: 'Servicio de '+servicio.descripcion,
                    html: '¿Está seguro que desea <b>Rechazar</b> el ' + $(this).data('tipo') + '?',
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Si, Rechazar',
                    cancelButtonText: 'Cancelar',
                    showCancelButton: true
                }).then(confirm => {
                    if (confirm.isConfirmed) {
                        Swal.fire({
                            icon: 'info',
                            title: 'Servicio de '+servicio.descripcion,
                            html: 'Por favor captura el motivo por el cual se rechaza el(la) <b>' + $(this).data('tipo') + '</b>.',
                            showCancelButton: true,
                            confirmButtonColor: '#3085d6',
                            cancelButtonColor: '#d33',
                            cancelButtonText: 'Cancelar',
                            confirmButtonText: 'Rechazar',
                            input: 'textarea',
                            inputPlaceholder: 'Escribe los comentarios correspondientes'
                        }).then(coments => {
                            if (coments.value.length > 0) {
                                formData.append("Observaciones", coments.value);
                                axios.put('/fumigacion/' + @Model.Modulo.Id+'/' + @Model.Submodulo.Id+'/facturacion/detalle/' + @Model.Inmueble.Id+'/' + @Model.Repositorio.Id+'/' + @Model.Cedula.Id+'?handler=AutorizarEntregables', formData, { headers: { 'Content-Type': 'multipart/form-data' } }).then(response => {
                                    if (response.status == 200) {
                                        Swal.fire({
                                            icon: "success",
                                            title: 'Servicio de '+servicio.descripcion,
                                            html: "El entregable <b>" + $(this).data('tipo') + "</b> se rechazó correctamente.",
                                            confirmButtonText: 'Cerrar'
                                        }).then(function () {
                                            Swal.fire({
                                                allowOutsideClick: false,
                                                icon: "info",
                                                title: 'Servicio de '+servicio.descripcion,
                                                html: "Actualizando la cédula de evaluación, espere por favor."
                                            });
                                            Swal.showLoading();
                                            window.location.reload();
                                        });
                                    }
                                }).catch(error => {
                                    Swal.fire({
                                        icon: "error",
                                        title: 'Servicio de '+servicio.descripcion,
                                        html: "Hubo un error al autorizar la cédula de evaluación. Contacte a su administrador del sistema.",
                                        confirmButtonText: 'Cerrar'
                                    });
                                });
                            }
                        });
                    }
                });
            });

            $(".validarEntregable").click(function () {
                var formData = new FormData();

                formData.append("Id", $(this).data('id'));
                formData.append("EstatusId", $(this).data('estatusid'));
                formData.append("Estatus", "Autorizado");
                formData.append("Validar", true);
                formData.append("Validado", true);

                Swal.fire({
                    icon: 'warning',
                    title: 'Servicio de '+servicio.descripcion,
                    html: '¿Estas seguro de que deseas <b>Validar</b> el ' + $(this).data('tipo') + '?',
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Si, validar',
                    cancelButtonText: 'Cancelar',
                    showCancelButton: true
                }).then(confirm => {
                    if (confirm.isConfirmed) {
                        axios.put('/fumigacion/' + @Model.Modulo.Id+'/' + @Model.Submodulo.Id+'/facturacion/detalle/' + @Model.Inmueble.Id+'/' + @Model.Repositorio.Id+'/' + @Model.Cedula.Id+'?handler=ActualizarEntregables', formData, { headers: { 'Content-Type': 'multipart/form-data' } }).then(response => {
                            if (response.status == 200) {
                                Swal.fire({
                                    icon: "success",
                                    title: 'Servicio de '+servicio.descripcion,
                                    html: "El(la) " + $(this).data('tipo') + " se validó correctamente.",
                                    confirmButtonText: 'Cerrar'
                                }).then(function () {
                                    Swal.fire({
                                        allowOutsideClick: false,
                                        icon: "info",
                                        title: 'Servicio de '+servicio.descripcion,
                                        html: "Actualizando la cédula de evaluación, espere por favor."
                                    });
                                    Swal.showLoading();
                                    window.location.reload();
                                });
                            }
                        }).catch(error => {
                            Swal.fire({
                                icon: "error",
                                title: 'Servicio de '+servicio.descripcion,
                                html: "Hubo un error al validar el entregable. Contacte a su administrador del sistema.",
                                confirmButtonText: 'Cerrar'
                            });
                        });
                    }
                });
            });

            function formatMoney(number) {
                return number.toLocaleString('en-US', { style: 'currency', currency: 'USD' });
            }
            /*********************************** Apartado de Entregables **********************************/

            /*********************************** Guardado de la Cédula **********************************/
            $(".btnRegresar").click(function () {
                Swal.fire({
                    allowOutsideClick: false,
                    icon: "info",
                    title: 'Servicio de '+servicio.descripcion,
                    html: "Regresando al listado de cédulas, espere por favor."
                });
                Swal.showLoading();
            });

            $(".guardarCedula").click(function () {
                var cRespuestas = new Array();

                for (var i = 0; i < respuestas.length; i++) {
                    let respuesta = $("input[name='" + respuestas[i].cuestionario.abreviacion + "']:checked").val();
                    if (respuesta != null && respuesta != undefined && respuesta != "N/A") {
                        cRespuestas.push({ CedulaEvaluacionId: parseInt(cedula.id), Pregunta: (i + 1),
                            Respuesta: (respuesta == "true"), UsuarioId: usuario });
                    } else if (respuesta == "N/A") {
                        cRespuestas.push({
                            CedulaEvaluacionId: parseInt(cedula.id), Pregunta: (i + 1),
                            Respuesta: (respuesta == "true"), Detalles: respuesta, UsuarioId: usuario
                        });
                    }
                }

                $.ajax({
                    url: '/fumigacion/' + @Model.Modulo.Id+'/' + @Model.Submodulo.Id+'/facturacion/detalle/' + @Html.Raw(Json.Serialize(Model.InmuebleId))+'/' + @Html.Raw(Json.Serialize(Model.RepositorioId))+'/' + @Html.Raw(Json.Serialize(Model.Cedula.Id))+'?handler=ActualizarRespuestas',
                    type: "put",
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(cRespuestas),
                    success: function () {
                        Swal.fire({
                            icon: 'success',
                            title: 'Servicio de '+servicio.descripcion,
                            html: 'Se guardaron las respuestas de la cédula de evaluación correctamente.',
                            confirmButtonText: 'Cerrar'
                        }).then(function () {
                            Swal.fire({
                                allowOutsideClick: false,
                                icon: "info",
                                title: 'Servicio de '+servicio.descripcion,
                                html: "Guardando el cuestionario, espere por favor."
                            });
                            Swal.showLoading();
                            window.location.reload();
                        });
                    }
                });
            });

            $(".desbloquearC").click(function () {
                //if (soporte.length == 0) {

                //} else {
                //    Swal.fire({
                //        icon: "error",
                //        title: 'Servicio de '+servicio.descripcion,
                //        html: "No puede desbloquear la cédula de evaluación hasta que concluya con todas las guías pendientes.",
                //        confirmButtonText: 'Cerrar'
                //    });
                //}
                Swal.fire({
                            icon: 'warning',
                            title: 'Servicio de '+servicio.descripcion,
                            html: '¿Está seguro que desea <b>Desbloquear</b> la cédula de evaluación?',
                            confirmButtonColor: '#3085d6',
                            cancelButtonColor: '#d33',
                            confirmButtonText: 'Si, Desbloquear',
                            cancelButtonText: 'Cancelar',
                            showCancelButton: true
                        }).then(confirm => {
                            if (confirm.isConfirmed) {
                                axios.put('/fumigacion/' + @Model.Modulo.Id+'/' + @Model.Submodulo.Id+'/facturacion/detalle/' + @Model.Inmueble.Id+'/' + @Model.Repositorio.Id+'/' + @Model.Cedula.Id+'?handler=UpdateCedula', {
                                    Id: parseInt(cedula.id), EstatusId: $(this).data("estatusid"), UsuarioId: usuario, FacturacionId: parseInt(facturacion.id),
                                    Observaciones: "Se desbloquea la cédula de evaluación.", Bloqueada: false
                                }).then(response => {
                                    if (response.status == 200) {
                                        Swal.fire({
                                            icon: "success",
                                            title: 'Servicio de '+servicio.descripcion,
                                            html: "La cédula de evaluación fue desbloqueada correctamente.",
                                            confirmButtonText: 'Cerrar'
                                        }).then(function () {
                                            window.location.reload();
                                        });
                                    }
                                }).catch(error => {
                                    Swal.fire({
                                        icon: "error",
                                        title: 'Servicio de '+servicio.descripcion,
                                        html: "Hubo un error al enviar la cédula. Contacte a su administrador del sistema.",
                                        confirmButtonText: 'Cerrar'
                                    });
                                });
                            }
                        });
            });

            // ESTATUS ENVIAR CEDULA
            $(".enviarCedula").click(function () {
                if (validaCuestionario()) {
                    if (validaEntregables()) {
                        Swal.fire({
                            icon: 'warning',
                            title: 'Servicio de '+servicio.descripcion,
                            html: '¿Está seguro que desea <b>Enviar a DAS</b> la cédula de evaluación?',
                            confirmButtonColor: '#3085d6',
                            cancelButtonColor: '#d33',
                            confirmButtonText: 'Si, Enviar',
                            cancelButtonText: 'Cancelar',
                            showCancelButton: true
                        }).then(confirm => {
                            if (confirm.isConfirmed) {
                                Swal.fire({
                                    allowOutsideClick: false,
                                    icon: "info",
                                    title: 'Servicio de '+servicio.descripcion,
                                    html: "Enviando la cédula de evaluación, espere por favor."
                                });
                                axios.put('/fumigacion/' + @Model.Modulo.Id+'/' + @Model.Submodulo.Id+'/facturacion/detalle/' + @Model.Inmueble.Id+'/' + @Model.Repositorio.Id+'/' + @Model.Cedula.Id+'?handler=UpdateCedula', {
                                    Id: parseInt(cedula.id), EstatusId: $(this).data("estatusid"), Calcula: true, UsuarioId: usuario,
                                    EFacturaId: parseInt($(this).data('efacturaid')),
                                    //SE DEFINIO ENOTA PARA ESTATUS RECHAZAR
                                    ENotaCreditoId: parseInt($(this).data('enotaid')),
                                    Elimina: false,
                                    Bloqueada: true,
                                    Flujo: supervision,
                                    RepositorioId: parseInt(repositorio),
                                    FacturacionId: parseInt(facturacion.id), Observaciones: "Se envía la cédula de evaluación a su revisión por la DAS."
                                }).then(response => {
                                    if (response.status == 200) {
                                        Swal.fire({
                                            icon:"success",
                                            title: 'Servicio de '+servicio.descripcion,
                                            html: "La cédula de evaluación fue enviada correctamente.",
                                            confirmButtonText: 'Cerrar'
                                        }).then(function () {
                                            window.location.reload();
                                        });
                                    }

                                }).catch(error => {
                                    Swal.fire({
                                        icon: "error",
                                        title: 'Servicio de '+servicio.descripcion,
                                        html: "Hubo un error al enviar la cédula. Contacte a su administrador del sistema.",
                                        confirmButtonText: 'Cerrar'
                                    });
                                });
                            }
                        });
                    }
                } else {

                }
            });

            $(".generarCedula").click(function () {
                axios.get('/fumigacion/' + @Model.Modulo.Id+'/' + @Model.Submodulo.Id+'/facturacion/detalle/' + @Model.Inmueble.Id+'/' + @Model.Repositorio.Id+'/' + @Model.Cedula.Id+'?inmueble='+cedula.inmueble+'&handler=RevisarFirmantes').then(cedula => {
                    if (cedula.status == 200 && cedula.data != null) {
                        Swal.fire({
                            allowOutsideClick: false,
                            icon: "info",
                            title: 'Servicio de '+servicio.descripcion,
                            html: "Generando la cédula de evaluación, espere por favor será redireccionado a otra pestaña.",
                            confirmButtonText: 'Cerrar'
                        });
                        Swal.showLoading();
                        window.open('/fumigacion/' + @Model.Modulo.Id+'/' + @Model.Submodulo.Id+'/cedula/' + @Model.Repositorio.Id+'/' + @Model.Inmueble.Id+'/' + @Model.Cedula.Id, '_blank');
                        Swal.hideLoading();
                    }
                    else
                    {
                        Swal.fire({
                            allowOutsideClick: false,
                            icon: "error",
                            title: 'Servicio de '+servicio.descripcion,
                            html: "<p style='text-align: justify'>Error no se puede generar la <b>Cédula de Evaluación</b>, favor de capturar previamente a los servidores públicos que firmarán electrónicamente la cédula de evaluación.</p>",
                            confirmButtonText: 'Capturar'
                        }).then(function () {
                            limpiaFirmantes()
                            $(".inmuebleReviso").val(inmueble.id);
                            $(".inmuebleSuperviso").val(inmueble.id);
                            $("#modal-firmante").modal("show");
                        });
                    }
                });
            });

            $("#actualizarFirmante").click(function () {
                var reviso = $("#firmanteReviso").val();
                var escolaridadR = $("#escolaridadReviso").val();
                var inmuebleR = $(".inmuebleReviso").val();
                var superviso = $("#firmanteSuperviso").val();
                var escolaridadS = $("#escolaridadSuperviso").val();
                var inmuebleS = $(".inmuebleSuperviso").val();

                Swal.fire({
                    allowOutsideClick: false,
                    icon: "info",
                    title: 'Servicio de ' + servicio.descripcion,
                    html: "Autorizando los firmantes, espere por favor."
                });
                Swal.showLoading();
                axios.post('/fumigacion/' + @Model.Modulo.Id+'/' + @Model.Submodulo.Id+'/facturacion/detalle/' + @Model.Inmueble.Id+'/' + @Model.Repositorio.Id+'/' + @Model.Cedula.Id+'?Handler=CreateFirmante', {
                    InmuebleId: parseInt(inmuebleR), UsuarioId: reviso, Escolaridad: escolaridadR, Tipo: "Reviso"
                }).then(response => {
                    if (response.status && response.data != null)
                    {
                        axios.post('/fumigacion/' + @Model.Modulo.Id+'/' + @Model.Submodulo.Id+'/facturacion/detalle/' + @Model.Inmueble.Id+'/' + @Model.Repositorio.Id+'/' + @Model.Cedula.Id+'?Handler=CreateFirmante', {
                            InmuebleId: parseInt(inmuebleS), UsuarioId: superviso, Escolaridad: escolaridadS, Tipo: "Superviso"
                        }).then(response => {
                            if (response.status && response.data != null)
                            {
                                Swal.fire({
                                    'icon': 'success',
                                    title: 'Servicio de ' + servicio.descripcion,
                                    'html': '<p class="text-justify">Los firmantes se guardaron correctamente. Por favor, nuevamente intente generar su entregable.',
                                    confirmButtonText: 'Cerrar'
                                }).then(function () {
                                    $("#modal-firmante").modal("hide");
                                });
                            }
                        }).catch(error => {
                            Swal.fire({
                                'icon': 'error',
                                title: 'Servicio de '+servicio.descripcion,
                                'html': 'Hubo un error al guardar al firmante que <b>Supervisa</b> el servicio. Contacte al administrador del sistema.'
                            });
                        });
                    }
                }).catch(error => {
                    Swal.fire({
                        'icon': 'error',
                        title: 'Servicio de '+servicio.descripcion,
                        'html': 'Hubo un error al guardar al firmante que <b>Revisa</b> el servicio. Contacte al administrador del sistema.'
                    });
                });
            });

            //ESTATUS AUTORIZAR
            $(".autorizar").click(function () {
                Swal.fire({
                    icon: 'warning',
                    title: 'Servicio de '+servicio.descripcion,
                    html: '¿Está seguro que desea <b>Autorizar</b> la cédula de evaluación?',
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Si, Autorizar',
                    cancelButtonText: 'Cancelar',
                    showCancelButton: true
                }).then(confirm => {
                    if (confirm.isConfirmed) {
                        Swal.fire({
                            icon: 'info',
                            title: 'Servicio de '+servicio.descripcion,
                            text: 'Por favor capture los comentarios.',
                            showCancelButton: true,
                            confirmButtonColor: '#3085d6',
                            cancelButtonColor: '#d33',
                            cancelButtonText: 'Cancelar',
                            confirmButtonText: 'Autorizar',
                            input: 'textarea',
                            inputPlaceholder: 'Escribe los comentarios correspondientes'
                        }).then(coments => {
                            if (coments.value.length > 0) {
                                Swal.fire({
                                    allowOutsideClick: false,
                                    icon: "info",
                                    title: 'Servicio de '+servicio.descripcion,
                                    html: "Autorizando la cédula de evaluación, espere por favor."
                                });
                                Swal.showLoading();
                                axios.put('/fumigacion/' + @Model.Modulo.Id+'/' + @Model.Submodulo.Id+'/facturacion/detalle/' + @Model.Inmueble.Id+'/' + @Model.Repositorio.Id+'/' + @Model.Cedula.Id+'?handler=UpdateCedula', {
                                    Id: parseInt(cedula.id), EstatusId: $(this).data("estatusid"), UsuarioId: usuario,
                                    EFacturaId: parseInt($(this).data('efacturaid')),
                                    RepositorioId: parseInt(facturacion.id),
                                    Observaciones: coments.value,
                                    Elimina: false,
                                    Flujo: supervision
                                }).then(response => {
                                    if (response.status == 200) {
                                        Swal.fire({
                                            icon: "success",
                                            title: 'Servicio de '+servicio.descripcion,
                                            html: "La cédula de evaluación se autorizó correctamente.",
                                            confirmButtonText: 'Cerrar'
                                        }).then(function () {
                                            Swal.fire({
                                                allowOutsideClick: false,
                                                icon: "info",
                                                title: 'Servicio de '+servicio.descripcion,
                                                html: "Actualizando la cédula de evaluación, espere por favor."
                                            });
                                            Swal.showLoading();
                                            window.location.reload();
                                        });
                                    }
                                }).catch(error => {
                                    Swal.fire({
                                        icon: "error",
                                        title: 'Servicio de '+servicio.descripcion,
                                        html: "Hubo un error al autorizar la cédula de evaluación. Contacte a su administrador del sistema.",
                                        confirmButtonText: 'Cerrar'
                                    });
                                });
                            }
                        })
                    }
                });
            });

            //ESTATUS RECHAZAR

            $(".rechazar").click(function () {
                Swal.fire({
                    icon: 'warning',
                    title: 'Servicio de '+servicio.descripcion,
                    html: '¿Está seguro que desea <b>Rechazar</b> la cédula de evaluación?',
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Si, Rechazar',
                    cancelButtonText: 'Cancelar',
                    showCancelButton: true
                }).then(confirm => {
                    if (confirm.isConfirmed) {
                        Swal.fire({
                            icon: 'info',
                            title: 'Servicio de '+servicio.descripcion,
                            text: 'Por favor capture el motivo por el cual rechaza la cédula.',
                            showCancelButton: true,
                            confirmButtonColor: '#3085d6',
                            cancelButtonColor: '#d33',
                            cancelButtonText: 'Cancelar',
                            confirmButtonText: 'Rechazar',
                            input: 'textarea',
                            inputPlaceholder: 'Escribe los comentarios correspondientes'
                        }).then(coments => {
                            if (coments.value.length > 0) {
                                Swal.fire({
                                    allowOutsideClick: false,
                                    icon: "info",
                                    title: 'Servicio de '+servicio.descripcion,
                                    html: "Rechazando la cédula de evaluación, espere por favor."
                                });
                                Swal.showLoading();
                                axios.put('/fumigacion/' + @Model.Modulo.Id+'/' + @Model.Submodulo.Id+'/facturacion/detalle/' + @Model.Inmueble.Id+'/' + @Model.Repositorio.Id+'/' + @Model.Cedula.Id+'?handler=UpdateCedula', {
                                    Id: parseInt(cedula.id), EstatusId: $(this).data("estatusid"), UsuarioId: usuario,

                                    EFacturaId: parseInt($(this).data('efacturaid')),
                                    //SE DEFINIO ENOTA PARA ESTATUS RECHAZAR
                                   /* ENotaCreditoId: parseInt($(this).data('enotaid')),*/
                                    RepositorioId: parseInt(facturacion.id),
                                    Observaciones: coments.value,
                                    Elimina: true,
                                    Flujo: supervision
                                }).then(response => {
                                    if (response.status == 200) {
                                        Swal.fire({
                                            icon: "success",
                                            title: 'Servicio de '+servicio.descripcion,
                                            html: "La cédula de evaluación se rechazó correctamente.",
                                            confirmButtonText: 'Cerrar'
                                        }).then(function () {
                                            Swal.fire({
                                                allowOutsideClick: false,
                                                icon: "info",
                                                title: 'Servicio de '+servicio.descripcion,
                                                html: "Actualizando la cédula de evaluación, espere por favor."
                                            });
                                            Swal.showLoading();
                                            window.location.reload();
                                        });
                                    }
                                }).catch(error => {
                                    Swal.fire({
                                        icon: "error",
                                        title: 'Servicio de '+servicio.descripcion,
                                        html: "Hubo un error al autorizar la cédula de evaluación. Contacte a su administrador del sistema.",
                                        confirmButtonText: 'Cerrar'
                                    });
                                });
                            }
                        })
                    }
                });
            });

            //ESTATUS REVISAR CAE

            $(".revisarCAE").click(function () {
                if (!validaNC()) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Servicio de '+servicio.descripcion,
                        html: 'La cédula cuenta con deductivas y aún no se adjunta la <b>Nota de Crédito</b>, favor de contactar a la <b>DAS</b>.',
                        confirmButtonText: 'Cerrar'
                    });

                    return false;
                }

                if (validaEntregables()) {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Servicio de '+servicio.descripcion,
                        html: '¿Está seguro que desea <b>Enviar a revisión por la CAE</b> la cédula de evaluación?',
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Si, enviar',
                        cancelButtonText: 'Cancelar',
                        showCancelButton: true
                    }).then(confirm => {
                        if (confirm.isConfirmed) {
                            Swal.fire({
                                allowOutsideClick: false,
                                icon: "info",
                                title: 'Servicio de '+servicio.descripcion,
                                html: "Enviando la cédula de evaluación a revisión de la CAE, espere por favor."
                            });
                            axios.put('/fumigacion/' + @Model.Modulo.Id+'/' + @Model.Submodulo.Id+'/facturacion/detalle/' + @Model.Inmueble.Id+'/' + @Model.Repositorio.Id+'/' + @Model.Cedula.Id+'?handler=UpdateCedula', {
                                Id: parseInt(cedula.id), EstatusId: $(this).data("estatusid"),
                                UsuarioId: usuario,
                                RepositorioId: parseInt(facturacion.id),
                                EFacturaId: parseInt($(this).data('efacturaid')),
                                Observaciones: "Se envía la cédula a revisión por parte de la CAE."
                            }).then(response => {
                                if (response.status == 200) {
                                    Swal.fire({
                                        icon: "success",
                                        title: 'Servicio de '+servicio.descripcion,
                                        html: "La cédula de evaluación se envió a revisión de la CAE correctamente.",
                                        confirmButtonText: 'Cerrar'
                                    }).then(function () {
                                        Swal.fire({
                                            allowOutsideClick: false,
                                            icon: "info",
                                            title: 'Servicio de '+servicio.descripcion,
                                            html: "Actualizando la cédula de evaluación, espere por favor."
                                        });
                                        Swal.showLoading();
                                        window.location.reload();
                                    });
                                }
                            }).catch(error => {
                                Swal.fire({
                                    icon: "error",
                                    title: 'Servicio de '+servicio.descripcion,
                                    html: "Hubo un error al autorizar la cédula de evaluación. Contacte a su administrador del sistema.",
                                    confirmButtonText: 'Cerrar'
                                });
                            });
                        }
                    });
                }
            });

            //ESTATUS AUTORIZADA CAE

            $(".autorizarCAE").click(function () {
                Swal.fire({
                    icon: 'warning',
                    title: 'Servicio de '+servicio.descripcion,
                    html: '¿Está seguro que desea <b>Autorizar por la CAE</b> la cédula de evaluación?',
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Si, autorizar',
                    cancelButtonText: 'Cancelar',
                    showCancelButton: true
                }).then(confirm => {
                    if (confirm.isConfirmed) {
                        Swal.fire({
                            allowOutsideClick: false,
                            icon: "info",
                            title: 'Servicio de '+servicio.descripcion,
                            html: "Verificando la cédula de evaluación, espere por favor."
                        });
                        Swal.showLoading();
                        axios.post('/fumigacion/' + @Model.Modulo.Id+'/' + @Model.Submodulo.Id+'/facturacion/detalle/' + @Model.Inmueble.Id+'/' + @Model.Repositorio.Id+'/' + @Model.Cedula.Id+'?handler=AutorizarCAE', {
                            Id: parseInt(cedula.id)
                        }).then(confirm => {
                            if (confirm.data == 0) {
                                Swal.fire({
                                    allowOutsideClick: false,
                                    icon: "info",
                                    title: 'Servicio de '+servicio.descripcion,
                                    html: "Autorizando la cédula de evaluación por la CAE, espere por favor."
                                });
                                axios.put('/fumigacion/' + @Model.Modulo.Id+'/' + @Model.Submodulo.Id+'/facturacion/detalle/' + @Model.Inmueble.Id+'/' + @Model.Repositorio.Id+'/' + @Model.Cedula.Id+'?handler=UpdateCedula', {
                                    Id: parseInt(cedula.id), EstatusId: $(this).data("estatusid"),
                                    UsuarioId: usuario,
                                    RepositorioId: parseInt(facturacion.id),
                                    EFacturaId: parseInt($(this).data('efacturaid')),
                                    Observaciones: "Se autoriza la cédula por parte de la CAE.",
                                    Bloqueada: false,
                                    Flujo: supervision
                                }).then(response => {
                                    if (response.status == 200) {
                                        Swal.fire({
                                            icon: "success",
                                            title: 'Servicio de '+servicio.descripcion,
                                            html: "La cédula de evaluación se autorizó por la CAE correctamente.",
                                            confirmButtonText: 'Cerrar'
                                        }).then(function () {
                                            Swal.fire({
                                                allowOutsideClick: false,
                                                icon: "info",
                                                title: 'Servicio de '+servicio.descripcion,
                                                html: "Actualizando la cédula de evaluación, espere por favor."
                                            });
                                            Swal.showLoading();
                                            window.location.reload();
                                        });
                                    }
                                });
                            }
                            else
                            {
                                Swal.fire({
                                    icon: "error",
                                    title: 'Servicio de '+servicio.descripcion,
                                    html: "Existen entregables pendientes de autorizar o rechazar. Favor de revisar.",
                                    confirmButtonText: 'Cerrar'
                                });
                            }
                        });
                    }
                });
            });

            // ESTATUS TRAMITE RECHAZADO

            $(".tramiteRechazado").click(function () {
                Swal.fire({
                    icon: 'warning',
                    title: 'Servicio de '+servicio.descripcion,
                    html: '¿Está seguro que desea <b>Rechazar el trámite</b> de la cédula de evaluación?',
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Si, Rechazar',
                    cancelButtonText: 'Cancelar',
                    showCancelButton: true
                }).then(confirm => {
                    if (confirm.isConfirmed) {
                        Swal.fire({
                            allowOutsideClick: false,
                            icon: "info",
                            title: 'Servicio de '+servicio.descripcion,
                            html: "Verificando la cédula de evaluación, espere por favor."
                        });
                        Swal.showLoading();
                        axios.post('/fumigacion/' + @Model.Modulo.Id+'/' + @Model.Submodulo.Id+'/facturacion/detalle/' + @Model.Inmueble.Id+'/' + @Model.Repositorio.Id+'/' + @Model.Cedula.Id+'?handler=TramiteRechazado', {
                            Id: parseInt(cedula.id)
                        }).then(confirm => {
                            if (confirm.data == 0)
                            {
                                Swal.fire({
                                    icon: 'info',
                                    title: 'Servicio de '+servicio.descripcion,
                                    html: 'Por favor capture el motivo por el cual <b>Rechaza el trámite</b> de la cédula.',
                                    showCancelButton: true,
                                    confirmButtonColor: '#3085d6',
                                    cancelButtonColor: '#d33',
                                    cancelButtonText: 'Cancelar',
                                    confirmButtonText: 'Rechazar',
                                    input: 'textarea',
                                    inputPlaceholder: 'Escribe los comentarios correspondientes'
                                }).then(coments => {
                                    if (coments.value.length > 0) {
                                        Swal.fire({
                                            allowOutsideClick: false,
                                            icon: "info",
                                            title: 'Servicio de '+servicio.descripcion,
                                            html: "Rechazando el trámite de la cédula de evaluación, espere por favor."
                                        });
                                        axios.put('/fumigacion/' + @Model.Modulo.Id+'/' + @Model.Submodulo.Id+'/facturacion/detalle/' + @Model.Inmueble.Id+'/' + @Model.Repositorio.Id+'/' + @Model.Cedula.Id+'?handler=UpdateCedula', {
                                            Id: parseInt(cedula.id), EstatusId: $(this).data("estatusid"),
                                            EFacturaId: parseInt($(this).data('efacturaid')),
                                            UsuarioId: usuario,
                                            RepositorioId: parseInt(facturacion.id),
                                            Observaciones: coments.value,
                                            Bloqueada: false,
                                            Flujo: supervision
                                        }).then(response => {
                                            if (response.status == 200) {
                                                Swal.fire({
                                                    icon: "success",
                                                    title: 'Servicio de '+servicio.descripcion,
                                                    html: "El trámite de la cédula de evaluación se rechazó correctamente.",
                                                    confirmButtonText: 'Cerrar'
                                                }).then(function () {
                                                    Swal.fire({
                                                        allowOutsideClick: false,
                                                        icon: "info",
                                                        title: 'Servicio de '+servicio.descripcion,
                                                        html: "Actualizando la cédula de evaluación, espere por favor."
                                                    });
                                                    Swal.showLoading();
                                                    window.location.reload();
                                                });
                                            }
                                        }).catch(error => {
                                            Swal.fire({
                                                icon: "error",
                                                title: 'Servicio de '+servicio.descripcion,
                                                html: "Hubo un error al autorizar la cédula de evaluación. Contacte a su administrador del sistema.",
                                                confirmButtonText: 'Cerrar'
                                            });
                                        });
                                    }
                                })
                            }
                            else
                            {
                                Swal.fire({
                                    icon: "error",
                                    title: 'Servicio de '+servicio.descripcion,
                                    html: "Existen entregables pendientes de autorizar o rechazar. Favor de revisar.",
                                    confirmButtonText: 'Cerrar'
                                });
                            }
                        });
                    }
                });
            });

            $(".tramitar").click(function () {
                if (validaEntregables()) {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Servicio de '+servicio.descripcion,
                        html: '¿Está seguro que desea <b>Tramitar</b> la cédula de evaluación?',
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Si, tramitar',
                        cancelButtonText: 'Cancelar',
                        showCancelButton: true
                    }).then(confirm => {
                        if (confirm.isConfirmed) {
                            Swal.fire({
                                allowOutsideClick: false,
                                icon: "info",
                                title: 'Servicio de '+servicio.descripcion,
                                html: "Tramitando la cédula de evaluación, espere por favor."
                            });
                            axios.put('/fumigacion/' + @Model.Modulo.Id+'/' + @Model.Submodulo.Id+'/facturacion/detalle/' + @Model.Inmueble.Id+'/' + @Model.Repositorio.Id+'/' + @Model.Cedula.Id+'?handler=UpdateCedula', {
                                Id: parseInt(cedula.id), EstatusId: $(this).data("estatusid"),
                                EFacturaId: parseInt($(this).data('efacturaid')),
                                UsuarioId: usuario,
                                RepositorioId: parseInt(facturacion.id),
                                Observaciones: "Se tramita la cédula por parte de la administración."
                            }).then(response => {
                                if (response.status == 200) {
                                    Swal.fire({
                                        icon: "success",
                                        title: 'Servicio de '+servicio.descripcion,
                                        html: "La cédula de evaluación se tramitó correctamente.",
                                        confirmButtonText: 'Cerrar'
                                    }).then(function () {
                                        Swal.fire({
                                            allowOutsideClick: false,
                                            icon: "info",
                                            title: 'Servicio de '+servicio.descripcion,
                                            html: "Actualizando la cédula de evaluación, espere por favor."
                                        });
                                        Swal.showLoading();
                                        window.location.reload();
                                    });
                                }
                            });
                        }
                    });
                }
            });

            $(".tramitePago").click(function () {
                Swal.fire({
                    icon: 'warning',
                    title: 'Servicio de '+servicio.descripcion,
                    html: '¿Está seguro que desea <b>Tramitar a Pago</b> la cédula de evaluación?',
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Si, tramitar',
                    cancelButtonText: 'Cancelar',
                    showCancelButton: true
                }).then(confirm => {
                    if (confirm.isConfirmed) {
                        axios.post('/fumigacion/' + @Model.Modulo.Id+'/' + @Model.Submodulo.Id+'/facturacion/detalle/' + @Model.Inmueble.Id+'/' + @Model.Repositorio.Id+'/' + @Model.Cedula.Id+'?handler=TramitarPago', {
                            Id: parseInt(cedula.id)
                        }).then(confirm => {
                            if (confirm.data == 200) {
                                Swal.fire({
                                    allowOutsideClick: false,
                                    icon: "info",
                                    title: 'Servicio de '+servicio.descripcion,
                                    html: "Enviando a trámite de pago la cédula de evaluación, espere por favor."
                                });
                                axios.put('/fumigacion/' + @Model.Modulo.Id+'/' + @Model.Submodulo.Id+'/facturacion/detalle/' + @Model.Inmueble.Id+'/' + @Model.Repositorio.Id+'/' + @Model.Cedula.Id+'?handler=UpdateCedula', {
                                    Id: parseInt(cedula.id), EstatusId: $(this).data("estatusid"),
                                    EFacturaId: parseInt($(this).data('efacturaid')),
                                    UsuarioId: usuario,
                                    RepositorioId: parseInt(facturacion.id),
                                    Observaciones: "Se envió a trámite de pago la cédula de evaluación."
                                }).then(response => {
                                    if (response.status == 200) {
                                        Swal.fire({
                                            icon: "success",
                                            title: 'Servicio de ' + servicio.descripcion,
                                            html: "La cédula de evaluación se tramitó a pago correctamente.",
                                            confirmButtonText: 'Cerrar'
                                        }).then(function () {
                                            Swal.fire({
                                                allowOutsideClick: false,
                                                icon: "info",
                                                title: 'Servicio de ' + servicio.descripcion,
                                                html: "Actualizando la cédula de evaluación, espere por favor."
                                            });
                                            Swal.showLoading();
                                            window.location.reload();
                                        });
                                    }
                                });
                            }
                            else if (confirm.data == 206) {
                                Swal.fire({
                                    icon: "error",
                                    title: 'Servicio de ' + servicio.descripcion,
                                    html: "Existen entregables pendientes de autorizar o rechazar. Favor de revisar.",
                                    confirmButtonText: 'Cerrar'
                                });
                            }
                            else if (confirm.data == 207)
                            {
                                Swal.fire({
                                    icon: "error",
                                    title: 'Servicio de '+servicio.descripcion,
                                    html: "<p style='text-align: justify'>Verifique que ya fueron validados los siguientes entregables:<br />" +
                                        "- <b>Memorándum</b>" +
                                        "- <b>Acta Entrega - Recepción (Firmada)</b>" +
                                        "- <b>Cedula Firmada (FIREL)</b></p>.",
                                    confirmButtonText: 'Cerrar'
                                });
                            }
                            else
                            {
                                Swal.fire({
                                    icon: "error",
                                    title: 'Servicio de '+servicio.descripcion,
                                    html: "Aún no se válida el <b>Acuse Memorándum (Firel)</b>.",
                                    confirmButtonText: 'Cerrar'
                                });
                            }
                        });
                    }
                });

                if (memoV) {

                }
                else {
                    Swal.fire({
                        icon: "error",
                        title: 'Servicio de '+servicio.descripcion,
                        html: "Aún no se valida el Acuse Memorándum (FIREL).",
                        confirmButtonText: 'Cerrar'
                    });
                }
            });

            function limpiaFirmantes() {
                $("#firmanteReviso").val('');
                $("#escolaridadReviso").val('');
                $(".inmuebleReviso").val('');
                $("#firmanteSuperviso").val('');
                $("#escolaridadSuperviso").val('');
                $(".inmuebleSuperviso").val('');
            }

            function validaCuestionario() {
                var complete = false;
                var preguntas = "";
                for (var i = 0; i < respuestas.length; i++) {
                    let respuesta = $("input[name='" + respuestas[i].cuestionario.abreviacion + "']:checked").val();
                    if (respuesta != null && respuesta != undefined) {
                        if (respuestas[i].ciFumigacion.respuesta + "" == respuesta && respuestas[i].ciFumigacion.obligatorio + "" == "true") {
                            if (cuentaIncidencias(cedula.id, respuestas[i].pregunta) == 0) {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Servicio de '+servicio.descripcion,
                                    html: 'Debe registrar la(s) incidencia(s) correspondientes en la <b>Pregunta ' + (i + 1) + '</b>',
                                    confirmButtonText: 'Cerrar'
                                });
                                return false;
                            }
                        }
                    }
                    else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Servicio de '+servicio.descripcion,
                            html: 'Debe contestar la <b>Pregunta ' + (i + 1) + '</b>',
                            confirmButtonText: 'Cerrar'
                        });

                        return false;
                    }
                }

                for (var i = 0; i < respuestas.length; i++) {
                    let respuesta = $("input[name='" + respuestas[i].cuestionario.abreviacion + "']:checked").val();
                    console.log("P: " + respuestas[i].cuestionario.abreviacion + " R: " + respuestas[i].respuesta + " RA: " + respuesta);
                    if (respuestas[i].respuesta + "" != respuesta + "" && respuesta != "N/A") {
                        Swal.fire({
                            icon: 'error',
                            title: 'Servicio de '+servicio.descripcion,
                            html: 'Debe guardar el cuestionario antes de enviar a revisión por la DAS.',
                            confirmButtonText: 'Cerrar'
                        });
                        return false;
                    }
                }
                return true;
            }

            function cuentaIncidencias(cedula, pregunta) {
                var isContinue = true;
                $.ajax({
                    url: '/fumigacion/' + @Model.Modulo.Id+'/' + @Model.Submodulo.Id+'/facturacion/detalle/' + @Model.Inmueble.Id+'/' + @Model.Repositorio.Id+'/' + @Model.Cedula.Id+'?Cedula=' + cedula + '&Pregunta=' + pregunta + '&handler=Incidencias',
                    type: 'GET',
                    async: false,
                    success: function (json) {
                        json == 0 ? isContinue = false : true;
                    },
                });
                return isContinue;
            }

            function validaEntregables() {
                var e = "";
                for (var i = 0; i < entregables.length; i++) {
                    if (entregables[i].archivo == null || entregables[i].archivo == "" || entregables[i].estatus.nombre == "Rechazado") {
                        e += "<b>- " + entregables[i].tipoEntregable.nombre + "</b><br>";
                    }
                }

                if (e != "") {
                    Swal.fire({
                        icon: 'error',
                        title: 'Servicio de '+servicio.descripcion,
                        html: 'Se deben adjuntar los siguientes entregables: <br>' + e,
                        confirmButtonText: 'Cerrar'
                    });

                    return false;
                }
                else {
                    return true;
                }
            }

            function validaNC() {
                if (penasDeductivas != 0 && existsNC != 0)
                {
                    return true;

                }
                else if (penasDeductivas != 0 && existsNC == 0)
                {
                    return false;
                }
                else if (penasDeductivas == 0)
                {
                    return true;
                }
            }

            function guardarCedula() {
                var cRespuestas = new Array();

                for (var i = 0; i < respuestas.length; i++) {
                    let respuesta = $("input[name='" + respuestas[i].cuestionario.abreviacion + "']:checked").val();
                    if (respuesta != null && respuesta != undefined && respuesta != "N/A") {
                        cRespuestas.push({ CedulaEvaluacionId: parseInt(cedula.id), Pregunta: (i + 1),
                            Respuesta: (respuesta == "true"), UsuarioId: usuario });
                    } else if (respuesta == "N/A") {
                        cRespuestas.push({
                            CedulaEvaluacionId: parseInt(cedula.id), Pregunta: (i + 1),
                            Respuesta: (respuesta == "true"), Detalles: respuesta, UsuarioId: usuario
                        });
                    }
                }

                $.ajax({
                    url: '/fumigacion/' + @Model.Modulo.Id+'/' + @Model.Submodulo.Id+'/facturacion/detalle/' + @Html.Raw(Json.Serialize(Model.InmuebleId))+'/' + @Html.Raw(Json.Serialize(Model.RepositorioId))+'/' + @Html.Raw(Json.Serialize(Model.Cedula.Id))+'?handler=ActualizarRespuestas',
                    type: "put",
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(cRespuestas),
                    success: function () {
                        Swal.fire({
                            icon: 'success',
                            title: 'Servicio de '+servicio.descripcion,
                            html: 'Se guardaron las respuestas de la cédula de evaluación correctamente.',
                            confirmButtonText: 'Cerrar'
                        }).then(function () {
                            Swal.fire({
                                allowOutsideClick: false,
                                icon: "info",
                                title: 'Servicio de '+servicio.descripcion,
                                html: "Actualizando el cuestionario, espere por favor."
                            });
                            Swal.showLoading();
                            window.location.reload();
                        });
                    }
                });
            }

            function guardarCedulaCP(obligatorio, pregunta, respuesta) {
                var cRespuestas = new Array();

                for (var i = 0; i < respuestas.length; i++) {
                    let respuesta = $("input[name='" + respuestas[i].cuestionario.abreviacion + "']:checked").val();
                    if (respuesta != null && respuesta != undefined && respuesta != "N/A") {
                        cRespuestas.push({ CedulaEvaluacionId: parseInt(cedula.id), Pregunta: (i + 1),
                            Respuesta: (respuesta == "true"), UsuarioId: usuario });
                    } else if (respuesta == "N/A") {
                        cRespuestas.push({
                            CedulaEvaluacionId: parseInt(cedula.id), Pregunta: (i + 1),
                            Respuesta: (respuesta == "true"), Detalles: respuesta, UsuarioId: usuario
                        });
                    }
                }

                $.ajax({
                    url: '/fumigacion/' + @Model.Modulo.Id+'/' + @Model.Submodulo.Id+'/facturacion/detalle/' + @Html.Raw(Json.Serialize(Model.InmuebleId))+'/' + @Html.Raw(Json.Serialize(Model.RepositorioId))+'/' + @Html.Raw(Json.Serialize(Model.Cedula.Id))+'?handler=ActualizarRespuestas',
                    type: "put",
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(cRespuestas),
                    success: function () {
                        if (obligatorio && respuesta != "N/A") {
                            Swal.fire({
                                allowOutsideClick: false,
                                icon: "warning",
                                title: 'Servicio de '+servicio.descripcion,
                                html: "La <b>Pregunta " + pregunta + " requiere</b> captura de incidencias.",
                                confirmButtonText: 'Cerrar'
                            }).then(function () {
                                Swal.fire({
                                    allowOutsideClick: false,
                                    icon: "info",
                                    title: 'Servicio de '+servicio.descripcion,
                                    html: "Cargando información para la captura de incidencias, espere por favor."
                                });
                                Swal.showLoading();
                                window.location.reload();
                            });
                        }
                        else {
                            Swal.fire({
                                allowOutsideClick: false,
                                icon: "info",
                                title: 'Servicio de '+servicio.descripcion,
                                html: "Guardando información, espere por favor."
                            });
                            Swal.showLoading();
                            window.location.reload();
                        }
                    }
                });
            }

            $(".generaAER").click(function () {
                axios.get('/fumigacion/' + @Model.Modulo.Id+'/' + @Model.Submodulo.Id+'/facturacion/detalle/' + @Model.Inmueble.Id+'/' + @Model.Repositorio.Id+'/' + @Model.Cedula.Id+'?inmueble='+cedula.inmueble+'&handler=RevisarFirmantes').then(cedula => {
                    if (cedula.status == 200 && cedula.data != null)
                    {
                        Swal.fire({
                            allowOutsideClick: false,
                            icon: "info",
                            title: 'Servicio de '+servicio.descripcion,
                            html: "Generando el <b>Acta Entrega - Recepción</b> de la evaluación, espere por favor."
                        });
                        Swal.showLoading();
                        if (penasDeductivas == 0 || existsNC != 0) {
                            axios.get('/fumigacion/' + @Model.Modulo.Id+'/' + @Model.Submodulo.Id+'/facturacion/detalle/' + @Model.Repositorio.Id+'/' + @Model.Inmueble.Id+'/' + @Model.Cedula.Id+'?nFacturacion=' +@Model.Repositorio.Id+'&CedulaId=' +@Model.Cedula.Id+'&nInmueble=' +@Model.Inmueble.Id+'&Supervision=' + supervision + '&Handler=ActaEntregaRecepcion', { responseType: 'blob' }).then(response => {
                                if (response.status == 200) {
                                    const href = URL.createObjectURL(response.data);
                                    const link = document.createElement('a');
                                    link.href = href;
                                    link.setAttribute('download', 'Acta_Entrega_Recepcion_Fumigacion.docx');
                                    document.body.appendChild(link);
                                    link.click();
                                    document.body.removeChild(link);
                                    URL.revokeObjectURL(href);
                                    Swal.fire({
                                        allowOutsideClick: false,
                                        icon: "info",
                                        title: 'Servicio de '+servicio.descripcion,
                                        html: "El <b>Acta Entrega - Recepción</b> se descargó correctamente. <p class='text-justify mt-3'>" +
                                               "<b class='text-danger'>Sugerencia:</b> En caso de que se generé una hoja en blanco favor de eliminarla.</p>",
                                        confirmButtonText: 'Cerrar'
                                    });
                                    Swal.hideLoading();
                                }
                            });
                        }
                        else
                        {
                            Swal.fire({
                                icon: "error",
                                title: 'Servicio de '+servicio.descripcion,
                                html: "No es posible generar el <b>Acta Entrega - Recepción</b> ya que aún no se adjunta el XML de la <b>Nota de Crédito</b>.",
                                confirmButtonText: 'Cerrar'
                            });
                        }
                    }
                    else
                    {
                        Swal.fire({
                            allowOutsideClick: false,
                            icon: "error",
                            title: 'Servicio de '+servicio.descripcion,
                            html: "<p style='text-align: justify'>Error no se puede generar el <b>Acta Entrega - Recepción</b>, favor de capturar previamente a los servidores públicos que firmarán electrónicamente la cédula de evaluación.</p>",
                            confirmButtonText: 'Capturar'
                        }).then(function () {
                            limpiaFirmantes()
                            $(".inmuebleReviso").val(inmueble.id);
                            $(".inmuebleSuperviso").val(inmueble.id);
                            $("#modal-firmante").modal("show");
                        });
                    }
                });
            });

            $(".btnAyuda").click(function () {
                var msg = $(this).data("ayuda");
                Swal.fire({
                    'customClass': 'swal-wide',
                    'icon': "info",
                    title: 'Servicio de ' + servicio.descripcion,
                    'confirmButtonText': 'Cerrar',
                    'html': msg
                });
            });

            $(".btnAyudaI").click(function () {
                var msg = $(this).data("ayuda");
                if (msg != "") {
                    Swal.fire({
                        'customClass': 'swal-wide',
                        'icon': "info",
                        title: 'Servicio de ' + servicio.descripcion,
                        'confirmButtonText': 'Cerrar',
                        'html': msg
                    });
                } else {
                    $(this).css("display","none");
                }
            });

            $(".solicitudRechazo").click(function () {
                Swal.fire({
                    icon: 'warning',
                    title: 'Servicio de '+servicio.descripcion,
                    html: '¿Está seguro que desea <b>Soliciar el Rechazo</b> de la cédula de evaluación?',
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Si, continuar',
                    cancelButtonText: 'Cancelar',
                    showCancelButton: true
                }).then(confirm => {
                    if (confirm.isConfirmed) {
                        Swal.fire({
                            icon: 'info',
                            title: 'Servicio de '+servicio.descripcion,
                            html: '<p style = "text-align: justify">Por favor capture el motivo por el cual solicita el rechazó de la cédula. <br/><br/>' +
                                   '<b class= "text-danger" >Advertencia: </b> En caso de que se autorice el <b>Rechazo de la cédula</b> todos los entregables '+
                                   'a <b>excepción de la "Factura" y la "Validación del SAT"</b> serán eliminados.<br/><br/>'+
                                   '<b class= "text-danger" >Una vez eliminados los entregables no se podrán recuperar. </b></p>',
                            showCancelButton: true,
                            confirmButtonColor: '#3085d6',
                            cancelButtonColor: '#d33',
                            cancelButtonText: 'Cancelar',
                            confirmButtonText: 'Solicitar rechazo',
                            input: 'textarea',
                            inputPlaceholder: 'Escribe los comentarios correspondientes'
                        }).then(coments => {
                            if (coments.value.length > 0) {
                                Swal.fire({
                                    allowOutsideClick: false,
                                    icon: "info",
                                    title: 'Servicio de '+servicio.descripcion,
                                    html: "Enviando la solicitud de rechazo de la cédula de evaluación, espere por favor."
                                });
                                axios.put('/fumigacion/' + @Model.Modulo.Id+'/' + @Model.Submodulo.Id+'/facturacion/detalle/' + @Model.Inmueble.Id+'/' + @Model.Repositorio.Id+'/' + @Model.Cedula.Id+'?handler=UpdateCedula', {
                                    Id: parseInt(cedula.id),
                                    UsuarioId: usuario,
                                    EstatusId: 14,
                                    Estatus: "En Revisión",
                                    Bloqueada: true,
                                    Flujo: supervision,
                                    Aprobada: true,
                                    Observaciones: coments.value,
                                }).then(response => {
                                    if (response.status == 200) {
                                        Swal.fire({
                                            icon: "success",
                                            title: 'Servicio de '+servicio.descripcion,
                                            html: "Se envió la solicitud del rechazó correctamente.",
                                            confirmButtonText: 'Cerrar'
                                        }).then(function () {
                                            Swal.fire({
                                                allowOutsideClick: false,
                                                icon: "info",
                                                title: 'Servicio de '+servicio.descripcion,
                                                html: "Actualizando la cédula de evaluación, espere por favor."
                                            });
                                            Swal.showLoading();
                                            window.location.reload();
                                        });
                                    }
                                }).catch(error => {
                                    Swal.fire({
                                        icon: "error",
                                        title: 'Servicio de '+servicio.descripcion,
                                        html: "Hubo un error al autorizar la cédula de evaluación. Contacte a su administrador del sistema.",
                                        confirmButtonText: 'Cerrar'
                                    });
                                });
                            }
                        })
                    }
                });
            });

            $(".denegarRechazo").click(function () {
                Swal.fire({
                    icon: 'warning',
                    title: 'Servicio de '+servicio.descripcion,
                    html: '¿Está seguro que desea <b>Denegar el Rechazo</b> de la cédula de evaluación?',
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Si, continuar',
                    cancelButtonText: 'Cancelar',
                    showCancelButton: true
                }).then(confirm => {
                    if (confirm.isConfirmed) {
                        Swal.fire({
                            icon: 'info',
                            title: 'Servicio de '+servicio.descripcion,
                            text: 'Por favor capture el motivo por el cual solicita el deniega el rechazo de la cédula.',
                            showCancelButton: true,
                            confirmButtonColor: '#3085d6',
                            cancelButtonColor: '#d33',
                            cancelButtonText: 'Cancelar',
                            confirmButtonText: 'Denegar rechazo',
                            input: 'textarea',
                            inputPlaceholder: 'Escribe los comentarios correspondientes'
                        }).then(coments => {
                            if (coments.value.length > 0) {
                                Swal.fire({
                                    allowOutsideClick: false,
                                    icon: "info",
                                    title: 'Servicio de '+servicio.descripcion,
                                    html: "Denegando la solicitud de rechazo de la cédula de evaluación, espere por favor."
                                });
                                axios.put('/fumigacion/' + @Model.Modulo.Id+'/' + @Model.Submodulo.Id+'/facturacion/detalle/' + @Model.Inmueble.Id+'/' + @Model.Repositorio.Id+'/' + @Model.Cedula.Id+'?handler=UpdateCedula', {
                                    Id: parseInt(cedula.id),
                                    UsuarioId: usuario,
                                    EstatusId: @Model.RevertirEstatus,
                                    Bloqueada: false,
                                    Aprobada: false,
                                    Observaciones: coments.value,
                                }).then(response => {
                                    if (response.status == 200) {
                                        Swal.fire({
                                            icon: "success",
                                            title: 'Servicio de '+servicio.descripcion,
                                            html: "Se denegó la solicitud del rechazó correctamente.",
                                            confirmButtonText: 'Cerrar'
                                        }).then(function () {
                                            Swal.fire({
                                                allowOutsideClick: false,
                                                icon: "info",
                                                title: 'Servicio de '+servicio.descripcion,
                                                html: "Actualizando la cédula de evaluación, espere por favor."
                                            });
                                            Swal.showLoading();
                                            window.location.reload();
                                        });
                                    }
                                }).catch(error => {
                                    Swal.fire({
                                        icon: "error",
                                        title: 'Servicio de '+servicio.descripcion,
                                        html: "Hubo un error al autorizar la cédula de evaluación. Contacte a su administrador del sistema.",
                                        confirmButtonText: 'Cerrar'
                                    });
                                });
                            }
                        })
                    }
                });
            });

            $(".cancelarRechazo").click(function () {
                Swal.fire({
                    icon: 'warning',
                    title: 'Servicio de '+servicio.descripcion,
                    html: '¿Está seguro que desea <b>Cancelar el Rechazo</b> de la cédula de evaluación?',
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Si, cancelar',
                    cancelButtonText: 'Cancelar',
                    showCancelButton: true
                }).then(confirm => {
                    if (confirm.isConfirmed) {
                        Swal.fire({
                            icon: 'info',
                            title: 'Servicio de '+servicio.descripcion,
                            text: 'Por favor capture el motivo por el cual cancela el rechazo de la cédula.',
                            showCancelButton: true,
                            confirmButtonColor: '#3085d6',
                            cancelButtonColor: '#d33',
                            cancelButtonText: 'Cancelar',
                            confirmButtonText: 'Cancelar rechazo',
                            input: 'textarea',
                            inputPlaceholder: 'Escribe los comentarios correspondientes'
                        }).then(coments => {
                            if (coments.value.length > 0) {
                                Swal.fire({
                                    allowOutsideClick: false,
                                    icon: "info",
                                    title: 'Servicio de '+servicio.descripcion,
                                    html: "Cancelando la solicitud de rechazo de la cédula de evaluación, espere por favor."
                                });
                                axios.put('/fumigacion/' + @Model.Modulo.Id+'/' + @Model.Submodulo.Id+'/facturacion/detalle/' + @Model.Inmueble.Id+'/' + @Model.Repositorio.Id+'/' + @Model.Cedula.Id+'?handler=UpdateCedula', {
                                    Id: parseInt(cedula.id),
                                    UsuarioId: usuario,
                                    EstatusId: @Model.RevertirEstatus,
                                    Bloqueada: false,
                                    Aprobada: false,
                                    Observaciones: coments.value,
                                }).then(response => {
                                    if (response.status == 200) {
                                        Swal.fire({
                                            icon: "success",
                                            title: 'Servicio de '+servicio.descripcion,
                                            html: "Se canceló la solicitud del rechazo correctamente.",
                                            confirmButtonText: 'Cerrar'
                                        }).then(function () {
                                            Swal.fire({
                                                allowOutsideClick: false,
                                                icon: "info",
                                                title: 'Servicio de '+servicio.descripcion,
                                                html: "Actualizando la cédula de evaluación, espere por favor."
                                            });
                                            Swal.showLoading();
                                            window.location.reload();
                                        });
                                    }
                                }).catch(error => {
                                    Swal.fire({
                                        icon: "error",
                                        title: 'Servicio de '+servicio.descripcion,
                                        html: "Hubo un error al cancelar la solicitud de la cédula de evaluación. Contacte a su administrador del sistema.",
                                        confirmButtonText: 'Cerrar'
                                    });
                                });
                            }
                        })
                    }
                });
            });

            /*********************************** Guardado de la Cédula **********************************/
        });

    </script>
}
